(function(){if(typeof(System)=='undefined' || typeof(Include)=='undefined'){alert('need support code!');}if(typeof(System.Data)=='undefined'){ Include('support/data.js');}if(typeof(System.CookieManager)=='undefined'){ Include('support/cookiemanager.js');} if(typeof(System.Effect)=='undefined'){Include('support/effect.js');}var dh=System.DomHelper;var ajax=Wade.ajax;var contentObjectID="containerTable";var dragCookieTime=720; var dragCoumnIDPrefix="column";var dragColumnIDRe=/column(\d+)/;var dragColumnTemplateStr='\n<div id="' + dragCoumnIDPrefix + '{columnid}" name="drag_column" class="{classname}" style="{csstext}"><div name="column_fix" class="e_wFix"></div></div>';var dragItemsCookieName="dragitems-data-"; var dragItemIDPrefix="item";var dragItemIDRe=/item(\d+)/;var dragItemTemplateStr='<div id="' + dragItemIDPrefix + '{itemid}" name="drag_item" class="l_pt" ><div class="c_edge">' +        '<h4 name="drag_item_h" class="unfold">' +     '<div class="text">{itemtitle}</div>' +     '<div class="fct">' +      '<ul>' +       '<li><a href="javascript:void(0);" onfocus="javascript:this.blur();" name="refreshbutton" class="refresh" onclick="javascript:System.DragLayout.controler.loadItem(this);" title="Ë¢ÐÂ"></a></li>' +       '<li><a href="javascript:void(0);" onfocus="javascript:this.blur();" name="foldbutton" class="fold"  onclick="javascript:System.DragLayout.controler.foldItem(this);" title="ÕÛµþ"></a></li>' +       '<li><a href="javascript:void(0);" onfocus="javascript:this.blur();" name="closebutton" class="close" onclick="javascript:System.DragLayout.controler.closeItem(this);" title="¹Ø±Õ"></a></li>' +      '</ul>' +     '</div>' +    '</h4>' +    '<div name="drag_item_b" class="c_edgeBody">' +    '{itemcontent}'+    '</div>' +   '</div></div>';var dragBottomItemIDPrefix='bottomItem';var dragBottomItemName='drag_bottomItem';   var dragBottomItemRegExp=/bottomItem(\w+)/ig;var transferData="";var foundServerError=false;function extractBodyHtml(str) {   if(typeof(str)=='string' && str!=''){    var bodyFragment='<body[^>]*>([\u0001-\uFFFF]*?)</body>';    var scriptFragment='<script[^>]*>([\u0001-\uFFFF]*?)</script>';    var frameFragment='<iframe[^>]*>([\u0001-\uFFFF]*?)</iframe>';    var formFragment='<form[^>]*>([\u0001-\uFFFF]*?)</form>';        str=str.replace(new RegExp(scriptFragment, 'img'),"");    str=str.replace(new RegExp(frameFragment, 'img'),"");    var hasForm=(new RegExp(formFragment, 'img')).test(str);        var fragment=hasForm?formFragment:bodyFragment;  var matchAll = new RegExp(fragment, 'img');  var matchOne = new RegExp(fragment, 'im');  var m=(str.match(matchAll) || []);  var results=[];  if(m && m.length){       results.push(((m[0]).match(matchOne) ||['',''])[1]);     }else{   return str;  }  bodyFragment=null;matchAll=null;matchOne=null;m=null;  return results.join('');   }}; System.DragLayout=(function(){    return {     pageID:0,        createXmlDocument:function (xmlstr){            var xmlDocument;            if(System.UserAgent.ie){                xmlDocument = new ActiveXObject("Msxml2.FreeThreadedDOMDocument");                xmlDocument.async=false;xmlDocument.resolveExternals = false;                xmlDocument.loadXML(xmlstr);            }else{               xmlDocument = (new DOMParser()).parseFromString(xmlstr, "text/xml");            }                   return xmlDocument;            }              };})();System.DragLayout.util=(function(){        return {        columns:new System.MixedCollection(),        items:new System.MixedCollection(),        getOffset:function(el, isLeft) {             var  retvalue  =   0 ;             while (el!=null){                retvalue += el["offset" +(isLeft?"Left":"Top")];                el = el.offsetParent;             }            return  retvalue;        },               bindFunction:function(el,fucName) {             return function(){                 return  el[fucName].apply(el,arguments);            };        },        re_calcOff:function(el) {            var me=this;            if(typeof(this.items)!='undefined' ){                this.items.each(function(item){if(item.elm){                    item.elm.pagePosLeft=me.getOffset(item.elm,true);                    item.elm.pagePosTop=me.getOffset(item.elm,false);                }});                var nextSib=el.elm.nextSibling;                while(nextSib){                    nextSib.pagePosTop-=el.elm.offsetHeight;                    nextSib=nextSib.nextSibling;                }            }        },        hide:function(){            if(typeof(this.rootElement)!='undefined' && this.rootElement!=null)                this.rootElement.style.display ="none" ;        },        show:function(){            if(typeof(this.rootElement)!='undefined' && this.rootElement!=null)                this.rootElement.style.display = "" ;        }       };})();System.DragLayout.column=function(id,name,width,order,className,cssText){    this.id=id;    this.name=name;    this.width=width;    this.order=order;    this.className=className;    this.csstext=cssText;};System.DragLayout.column.prototype={    createColumn:function(){        var me=this;        var container=document.getElementById(contentObjectID);if(container){            var tpl=new dh.Template(dragColumnTemplateStr);            var html=tpl.applyTemplate({columnid:me.id,csstext:me.csstext,classname:me.className});            dh.insertHtml( 'beforeend',container,html);            me.dom=document.getElementById(dragCoumnIDPrefix + me.id);        }container=null;    },    getColumnFix:function(){        vardq=System.DomHelper.DomQuery,dh=System.DomHelper,columnFix=null;        if(this.dom){columnFix=System.query('#' + dh.id(this.dom) + ' div[name=column_fix]');columnFix=(columnFix && columnFix.length)?columnFix[0]:null;}        return columnFix;    },    createItems:function(){        var cm=System.CookieManager,dl=System.DragLayout,util=System.DragLayout.util;        var me=this,columnFix=me.getColumnFix();if(!columnFix) return;        var dataArr,columnCookie=new cm(document,dragItemsCookieName + me.id,dragCookieTime,"/");                if(columnCookie.load()){                         if(typeof(columnCookie['column-data'])!='undefined' && columnCookie['column-data']!=null){                var dataArr=columnCookie['column-data'].split('|');                if(dataArr && typeof(dataArr.length)=='number'){                    var itemData,itemObj;                    for(var i=0;i<dataArr.length;i++){                       itemData=dataArr[i].split('$');                       if(itemData && itemData.length==2){                          itemObj=util.items.get(itemData[0]);                          if(itemObj){itemObj.columnid=me.id;itemObj.fold=itemData[1]; itemObj.createItem();itemObj.loadContent();}                       }                    }itemData=null;itemObj=null;                 }             }        }else{            dataArr=new Array();            util.items.each(function(item){                if(item.columnid==me.id){item.createItem();item.loadContent();dataArr.push(item.id + '$1');}            });            columnCookie=new cm(document,dragItemsCookieName + me.id,dragCookieTime,"/");            columnCookie['column-data']=dataArr.join('|');            columnCookie.store();         }        columnFix=null;dataArr=[];dataArr=null;           me.createBottomItem(me.id);        },    createBottomItem:function(columnid){        var util=System.DragLayout.util;        var el=document.getElementById(dragCoumnIDPrefix + columnid);        if(el){            var columnFix=System.query('#' + dh.id(el) + ' div[name=column_fix]');            columnFix=(columnFix && columnFix.length)?columnFix[0]:null;            if(columnFix){                 var html='<div id="' + (dragBottomItemIDPrefix+columnid) + '" name="' + dragBottomItemName + '" ></div> ';                dh.insertHtml('beforeend',columnFix,html);                var bottomItemDom=document.getElementById(dragBottomItemIDPrefix+columnid);                var t=new System.DragLayout.item(dragBottomItemIDPrefix+columnid,columnid,'');                t.elm=document.getElementById(dragBottomItemIDPrefix+columnid);                util.items.add(dragBottomItemIDPrefix+columnid,t);            }columnFix=null;        }el=null;    }};System.DragLayout.item=function(id,columnid,title,dataurl){    this.id=id;    this.columnid=columnid;    this.title=title;    this.dataurl=dataurl;    this.fold=1;};System.DragLayout.item.prototype={    createItem:function(){        var me=this;var util=System.DragLayout.util;        var column=document.getElementById(dragCoumnIDPrefix + me.columnid);        if(column){            var columnFix=System.query('#' + dh.id(column) + ' div[name=column_fix]');columnFix=(columnFix && columnFix.length)?columnFix[0]:null;            if(columnFix){var tpl=new dh.Template(dragItemTemplateStr);            dh.insertHtml( 'beforeend',columnFix,tpl.applyTemplate({itemid:me.id,itemtitle:me.title}));            me.elm=document.getElementById(dragItemIDPrefix + me.id);            if((/^[0-9]+$/).test(me.id)){me.dragAble();me.loadFold();}            columnFix=null;   }        }column=null;         },    loadContent:function(){        if(this.elm){            var itemBody=System.query('#' + dh.id(this.elm) + ' div[name=drag_item_b]');            itemBody=(itemBody && itemBody.length)?itemBody[0]:null;            if(itemBody && this.dataurl && this.dataurl!=''){                itemBody.innerHTML='<div style="height:60px;padding-top:25px;text-align:center;">&#x52A0;&#x8F7D;&#x4E2D;...</div>';                var dataurl=this.dataurl;if(dataurl.indexOf('?')>-1)dataurl+='&';else dataurl+='?';                dataurl+=transferData;if(transferData!="")dataurl+="&";dataurl+='radomtemp='+Math.random();                var outSys=!(dataurl.indexOf("http://")<0);                try{                 setTimeout(function(){                  ajax.AjaxLoading=false;                  ajax.get(dataurl,this,function(r){                   ajax.AjaxLoading=true;                   if(!outSys){                    var scripts="";                    var content=r.responseText;                                        var scArr=System.Common.extractScripts(content);        if((scArr instanceof Array) && scArr.length>0){         scripts+= scArr.join(";") + ";";         scripts=scripts.replace(/<!--|\/\/-->/ig,"");        }scArr=null;        content=extractBodyHtml(content);                if(/<div id="exceDescPageContent"[^>]*>/ig.test(content) && foundServerError==false){         Include("module/excedesc.js");         dh.insertHtml("beforeend",document.body,extractBodyHtml(content));         if(typeof(Wade.excedesc)!="undefined"){Wade.excedesc.AsyncError=true;Wade.excedesc.initExceDesc();}         foundServerError=true;        }else{         try{          itemBody.innerHTML=content;          eval(scripts);         }catch(ex){}        }                   }else{                    itemBody.innerHTML=r.responseText;                   }                   r=null;itemBody=null;                  },false);                 },500);                 }catch(ex){}            }        }    },    setFold:function(){        var dm=System.DragLayout.dataManager;        var me=this;        if(me.elm ){            var h=System.query('#' + dh.id(me.elm) + ' h4[name=drag_item_h]');            h=(h && h.length)?h[0]:null;            var b=System.query('#' + dh.id(me.elm) + ' div[name=drag_item_b]');            b=(b && b.length)?b[0]:null;            var btn=System.query('#' + dh.id(this.elm) + ' a[name=foldbutton]');            btn=(btn && btn.length)?btn[0]:null;                         if(b){               if(dh.getStyle(b,'display')=='none'){                dh.setStyle(b,'display','block');                if(btn){dh.removeClass(btn,'unfold');dh.addClass(btn,'fold');btn.setAttribute('title','ÕÛµþ');}                if(h){dh.removeClass(h,'fold');dh.addClass(h,'unfold');}                me.fold=1;               }else{                dh.setStyle(b,'display','none');                if(btn){dh.removeClass(btn,'fold');dh.addClass(btn,'unfold');btn.setAttribute('title','Õ¹¿ª');}                if(h){dh.removeClass(h,'unfold');dh.addClass(h,'fold');}                me.fold=0;               }               b=null;h=null;btn=null;               dm.updateColumnCookieData(me.columnid);              }                }    },    loadFold:function(){        var dm=System.DragLayout.dataManager;        var me=this;        if(me.elm ){            var h=System.query('#' + dh.id(me.elm) + ' h4[name=drag_item_h]');            h=(h && h.length)?h[0]:null;            var b=System.query('#' + dh.id(me.elm) + ' div[name=drag_item_b]');            b=(b && b.length)?b[0]:null;            var btn=System.query('#' + dh.id(this.elm) + ' a[name=foldbutton]');            btn=(btn && btn.length)?btn[0]:null;                         if(b){               if(me.fold==1){                dh.setStyle(b,'display','block');                if(btn){dh.removeClass(btn,'unfold');dh.addClass(btn,'fold');btn.setAttribute('title','ÕÛµþ');}                if(h){dh.removeClass(h,'fold');dh.addClass(h,'unfold');}               }else if(me.fold==0){                dh.setStyle(b,'display','none');                if(btn){dh.removeClass(btn,'fold');dh.addClass(btn,'unfold');btn.setAttribute('title','Õ¹¿ª');}                if(h){dh.removeClass(h,'unfold');dh.addClass(h,'fold');}               }               b=null;h=null;btn=null;            }                }            },    loadMask:function(){       var ct=document.getElementById(contentObjectID);  if(ct && ct.parentNode){   ct=System.fly(ct.parentNode);   var html='<div id="drag_resize_mask" style="width:' +dh.getViewWidth(true)+ 'px;height:' + dh.getViewHeight(true) + 'px;z-index:2;display:block;position:absolute;top:0;left:0;-moz-opacity: 0.5;opacity:.50;filter: alpha(opacity=50);background-color:#e8eeef;"></div>';   ct.insertHtml('beforeend',html);  }ct=null;            },    removeMask:function(){     var mask=System.get('drag_resize_mask');     if(mask)mask.remove();mask=null;    },    resize:function(){     var me=this;  var el=System.fly(me.elm);  if(!el)return;    if(me.resized!==true){   if(me.fold==0)me.setFold.apply(this);      if(!me.bodyHeight){    var b=System.query('#' + dh.id(me.elm) + ' div[name=drag_item_b]');    b=(b && b.length)?b[0]:null;if(b){me.bodyHeight=b.offsetHeight;}b=null;   }      var vw = dh.getViewWidth(), vh = dh.getViewHeight();   var s = System.get(document).getScroll();   me.bSize=[parseInt(vw*0.618),parseInt(vh*0.618)];   me.bXy=[parseInt(((vw+s.left)-parseInt(me.bSize[0]))/2),parseInt(((vh+s.top)-parseInt(me.bSize[1]))/2)];        if(!me.proxy){        me.proxy = System.get('drag_resize_proxy');        if(!me.proxy){         dh.insertHtml('beforeend',document.body,'<div id="drag_resize_proxy" style="width:0px;height:0px;left:0px;top:0px;position:absolute;border:solid 1px #b2ccdf;background-color:#cee2f1;"></div>');         me.proxy = System.get('drag_resize_proxy');         me.proxy.setOpacity(.5);        }       me.proxy.setVisible(false);       }       var paddingTop=dh.removeUnits(el.getStyle('padding-top'));       if(!me.size){        me.size=el.getSize();        if(paddingTop && /^\d+$/.test(paddingTop)){me.size.height=me.size.height-parseInt(paddingTop);}       }   if(!me.xy){    me.xy=el.getXY();    if(paddingTop && /^\d+$/.test(paddingTop)){me.xy[1]=me.xy[1]+parseInt(paddingTop);}   }   me.proxy.setXY(me.xy);   me.proxy.setSize(me.size.width,me.size.height);   me.proxy.setVisible(true);   me.hiddenEl();   me.createResizeGhostEl();   me.proxy.setBounds(me.bXy[0], me.bXy[1], me.bSize[0], me.bSize[1],                 true, .35, me.resizeEl.createDelegate(this));     }else{         me.bSize=[el.getWidth(),el.getHeight()];         me.hiddenEl.apply(this);         me.removeMask.apply(this);         if(me.proxy){          me.proxy.setXY(me.bXy);          me.proxy.setSize(me.bSize[0],me.bSize[1]);          me.proxy.setVisible(true);          me.proxy.setBounds(me.xy[0], me.xy[1], me.size.width, me.size.height,                 true, .35, me.unresizeEl.createDelegate(this));         }     }         return;                      },       resizeEl:function(){     var el=this.elm;     if(el){       if(this.proxy){       this.proxy.setVisible(false);    this.loadMask();      }          var h=System.query('#' + dh.id(el) + ' h4[name=drag_item_h]');   h=(h && h.length)?h[0]:null;   if(h){    var b=System.query('#' + dh.id(el) + ' div[name=drag_item_b]');    b=(b && b.length)?b[0]:null;    if(b){b.style.height=dh.addUnits(this.bSize[1]-parseInt(h.offsetHeight));}    b=null;   }h=null;   this.unDragAble.apply(this);      el.style.position='absolute';      el.style.zIndex='5';      el.style.left=dh.addUnits(this.bXy[0]);      el.style.top=dh.addUnits(this.bXy[1]);      el.style.width=dh.addUnits(this.bSize[0]);   el.style.display='';         this.resized=true;      return;        }el=null;        },    unresizeEl:function(){  var me=this;     if(me.proxy){      me.proxy.setVisible(false);           }me.proxy=null;me.size=null;me.xy=null;     me.removeResizeGhostEl();      if(me.bodyHeight){   var b=System.query('#' + dh.id(me.elm) + ' div[name=drag_item_b]');   b=(b && b.length)?b[0]:null;   if(b){b.style.height=dh.addUnits(me.bodyHeight);}b=null;        }me.bodyHeight=null;          me.showEl.apply(this);       this.enDragAble.apply(this);     this.resized=false;    },    showEl:function(){     var el=this.elm;     if(el){    el.style.left='';    el.style.top='';    el.style.width='auto';    el.style.position='';    el.style.zIndex='';    el.style.display='';     }el=null;    },    hiddenEl:function(){      var el=this.elm;     if(el){      el.style.display='none';         }el=null;        },    createResizeGhostEl:function(){     var el=System.fly(this.elm);     if(el){      var h=this.size.height;      if(System.UserAgent.ie)h-=2;      var gle=System.get('drag_resize_ghost_element');      if(!gle){       var html='<div id="drag_resize_ghost_element" style="height:' + h  + 'px;text-align:center;" class="l_pt"><div class="c_edge" style="height:99%;width:99%;border:dashed 1px #cccccc;"></div></div>';    el.insertHtml('beforebegin',html);       }else{       el.insertBefore(gle);      }     }el=null;        },    removeResizeGhostEl:function(){    var gel=System.get('drag_resize_ghost_element');    if(gel){gel.remove();gel=null;}    },      dragAble:function(){        var util=System.DragLayout.util;        var dragObj=System.DragLayout.dragObj;        var dragEvent=System.DragLayout.dragEvent;                this._dragStart  =  dragEvent.start_Drag;        this._drag  =  dragEvent.when_Drag;        this._dragEnd  =  dragEvent.end_Drag;        this._afterDrag  =  dragEvent.after_Drag;        this.isDragging  =   false ;          var h=System.query('#' + dh.id(this.elm) + ' h4[name=drag_item_h]');        h=(h && h.length) ? h[0] :null;if(h)this.header=h;                                if(this.header) {              this.header.style.cursor = 'move';             dragObj.init(this.header,  this.elm);             System.fly(this.header).on('dblclick',this.resize.createDelegate(this));             this.elm.onDragStart =  this._dragStart.createDelegate(this);             this.elm.onDrag = this._drag.createDelegate(this);              this.elm.onDragEnd =this._dragEnd.createDelegate(this);        }    },    unDragAble:function(){     this.elm.onDragStart=function(){return false;};    },    enDragAble:function(){     this.elm.onDragStart = this._dragStart.createDelegate(this);    }};System.DragLayout.dataManager=(function(){    var dl=System.DragLayout;    var cm=System.CookieManager;    var am=System.AjaxManager;    var util=System.DragLayout.util;    return {        updateColumnCookieData:function(columnid){            var util=System.DragLayout.util;            if(typeof(columnid)!='undefined' && columnid!=''){                var items=System.query('#' + dragCoumnIDPrefix + columnid  + ' div[name=drag_item]');                if(items && typeof(items.length)=='number'){                    var itemID,itemObj,dataArr=new Array();                    for(var i=0;i<items.length;i++){                        if((/^[a-zA-Z]+[0-9]+$/).test(items[i].id)){                            itemID=(items[i].id).replace(dragItemIDPrefix,'');                            itemObj=util.items.get(itemID);if(itemObj){                                dataArr.push(itemObj.id + '$' + itemObj.fold);                            }                        }                    }                    columnCookie=new cm(document,dragItemsCookieName + columnid,dragCookieTime,"/");                    if(columnCookie.load()){                        columnCookie['column-data']=dataArr.join('|');                        columnCookie.store();                   }dataArr=[];dataArr=null; columnCookie=null;                }items=[];items=null;            }        },        removeCookieData:function (){           var container=document.getElementById(contentObjectID);         if(typeof(container)!='undefined' && container!=null)         {             var columns=System.query('#' + contentObjectID + ' div[name=drag_column]');             if(columns && columns.length){                 var columnCookie;                 for(var i=0;i<columns.length;i++){                    columnCookie=new cm(document,dragItemsCookieName + dh.id(columns[i]).replace(dragCoumnIDPrefix,''),dragCookieTime,"/");                    columnCookie.remove();                 }                    columnCookie=null;                }                 columns=[]; columns=null;         }container=null;        },       init:function(params){            var cssText, me=this;             var container=document.getElementById(contentObjectID);if(container){            container.innerHTML='<div style="width:100%;height:300px;text-align:center;padding-top:160px;">&#x52A0;&#x8F7D;&#x4E2D;.......</div>';                     ajax.ajaxDirect(null,'getDragLayoutData',params,'',false,function(r){                container.innerHTML='';                Wade.page.endPageLoading();                var xmlDoc=dl.createXmlDocument(r.responseText);                var root=xmlDoc.documentElement || xmlDoc;                document.title=dh.DomQuery.selectValue("page/pagedesc",root);                var reader = new System.Data.XmlReader({ record: 'column',id:'@id'},['@width','@orderno']);                var itemReader=new System.Data.XmlReader({record:'item',id:'@id'},['@columnid','@itemtitle','dataurl']);                var data=reader.readRecords(xmlDoc);                if(data && data.records.length){                    var dataitem,itemdata,t;                    var cssText,className,dcount=data.records.length;                    var wArr=new Array();                    for(var i=0;i<dcount;i++){                     wArr.push(data.records[i].get('@width'));                    }                    var getMargin=function(s,t){                     var r=0;                     if(wArr && (wArr instanceof Array) && typeof(s)=='number' && typeof(t)=='number'){                      for(var i=s;i<t;i++){                       if(typeof(wArr[i])!='undefined' && /^\d+$/.test(wArr[i])){                        r+=parseInt(wArr[i]) + 8;                       }                      }                     }                     return r;                    };                    for(var i=0;i<dcount;i++){                        dataitem=data.records[i];                         if(i==1 && wArr[i]=='auto'){                          className='l_dragCol';                          cssText='width:auto;margin:0 ' + getMargin(i,dcount) + 'px 0 ' + getMargin(0,i) + 'px;';                         }else{                           if(i==0){className='l_left';}else{className='l_right';}                                                      cssText='width:' + wArr[i] + 'px;';                                                      if(i!=(dcount-1) && i>1) {cssText+='margin-right:8px;';}                         }                        t=new System.DragLayout.column(dataitem.id,dataitem.get('@name'),dataitem.get('@width'),                                  dataitem.get('@orderno'),className,cssText);                         util.columns.add(t.id,t);                          itemdata=itemReader.readRecords(dataitem.node);                        if(itemdata && itemdata.records.length){                            for(var j=0;j<itemdata.records.length;j++){                                dataitem=itemdata.records[j];                                t=new System.DragLayout.item(dataitem.id,dataitem.get('@columnid'),dataitem.get('@itemtitle'),dataitem.get('dataurl'));                                 util.items.add(t.id,t);                            }                        }                                                    }                    wArr=[];wArr=null;getMargin=null;                    dataitem=null;                 }data=null; reader=null;itemReader=null;root=null; xmlDoc=null;                               var len=util.columns.length;                var i=0;                if(len<3){                                  if(len>1){for(i=0;i<2;i++){                  util.columns.items[i].createColumn();                  util.columns.items[i].createItems();                 }}                }else {                 util.columns.items[0].createColumn();                 util.columns.items[0].createItems();                                     if(len-1>1){for(i=len-1;i>1;i--){                  util.columns.items[i].createColumn();                  util.columns.items[i].createItems();                 }}                 util.columns.items[1].createColumn();                 util.columns.items[1].createItems();                }                            });}        }           };    })();System.DragLayout.ghostElement=(function(){    var ghostElement  =   null ;    return {        borderSize:2,        getElement:function(){             if (!ghostElement) {                ghostElement  = document.createElement("div");                ghostElement.style.cssText="width:auto;";                ghostElement.innerHTML  = "&nbsp;" ;            }            return  ghostElement;        },        setBorder:function(){            if(ghostElement){                ghostElement.style.border=this.borderSize + 'px dashed #aaa';            }        },        moveBorder:function(){            if(ghostElement){                ghostElement.style.border='';            }        }    };})();System.DragLayout.dragObj=(function(){    return {        obj: null ,         init: function(elementHeader, element) {            elementHeader.onmousedown = System.DragLayout.dragObj.start;            elementHeader.obj  =  element;            if (isNaN(parseInt(element.style.left))){             element.style.left = "0px";         }         if(isNaN(parseInt(element.style.top))){             element.style.top = "0px";         }            element.onDragStart = new  Function();            element.onDragEnd = new  Function();            element.onDrag = new Function();        },        start: function (event){            var  element=System.DragLayout.dragObj.obj=this.obj;            event=System.DragLayout.dragObj.fixE(event);            var eventSrc=event.srcElement || event.target;            if(typeof(eventSrc)!='undefined' && eventSrc.tagName=='A')return true;             if (event.which != 1)  return true ;                if(!element.onDragStart())return true;                         element.lastMouseX  =  event.clientX;            element.lastMouseY  =  event.clientY;            document.onmouseup  =  System.DragLayout.dragObj.end;            document.onmousemove  =  System.DragLayout.dragObj.drag;            return false ;        },         drag: function (event){            event = System.DragLayout.dragObj.fixE(event);            if(event.which== 0 ) return  System.DragLayout.dragObj.end();                        var  element  =   System.DragLayout.dragObj.obj;            var  _clientX  =  event.clientY;            var  _clientY  =  event.clientX;            if  (element.lastMouseX  ==  _clientY  &&  element.lastMouseY  ==  _clientX) return   false ;                 var  _lastX  =  parseInt(element.style.top);            var  _lastY  =  parseInt(element.style.left);                        var  newX, newY;            newX  =  _lastY  +  _clientY  -  element.lastMouseX;            newY  =  _lastX  +  _clientX  -  element.lastMouseY;            element.style.left  =  newX +"px" ;            element.style.top  =  newY +"px" ;                  element.lastMouseX  =  _clientY;            element.lastMouseY  =  _clientX;                        element.onDrag(dh.getX(element), dh.getY(element));                        return false ;        },        end: function(event){            event=  System.DragLayout.dragObj.fixE(event);            document.onmousemove  =   null ;            document.onmouseup  =   null ;             var  _onDragEndFuc  =  System.DragLayout.dragObj.obj.onDragEnd();             System.DragLayout.dragObj.obj  =   null ;            return  _onDragEndFuc;        },         fixE:function (ig_){            if  ( typeof  ig_  == 'undefined' ) {                ig_  =  window.event;            }             if( typeof  ig_.layerX  == 'undefined') {                ig_.layerX  =  ig_.offsetX;            }            if  ( typeof  ig_.layerY  == 'undefined') {                ig_.layerY  =  ig_.offsetY;            }            if  ( typeof  ig_.which  == 'undefined') {                ig_.which  = ig_.button;            }            return  ig_;        }    };})();   System.DragLayout.dragEvent=(function(){    var cc=System.CompatibleController;    var util=System.DragLayout.util;    var ghostEl=System.DragLayout.ghostElement;        return {        start_Drag:function(){            util.re_calcOff(this);            this.origNextSibling = this.elm.nextSibling;                        var  _ghostElement =ghostEl.getElement();                        var  offH =this.elm.offsetHeight;            var  offW  = this.elm.offsetWidth;                                                   var  offLeft = util.getOffset(this.elm,true);             var marginLeft=dh.removeUnits(dh.getStyle(this.elm,'margin-left'));             if(typeof(marginLeft)!='undefined' && marginLeft!=''){                offLeft=offLeft-marginLeft;             }                                var  offTop  =  util.getOffset(this.elm,false);             var marginTop=dh.removeUnits(dh.getStyle(this.elm,'margin-top'));                          var paddingTop=dh.removeUnits(dh.getStyle(this.elm,'padding-top'));                          util.hide();                                      if(offW)dh.setStyle(this.elm,'width',offW + 'px');             if(marginTop && /^\d+$/.test(marginTop)){                             }                           if(paddingTop && /^\d+$/.test(paddingTop)){                offH-=paddingTop;             }             offH -=ghostEl.borderSize*2 ;                          var cssText='height:' + offH + 'px;border:dashed ' + ghostEl.borderSize + 'px #aaa;';            if(marginTop)_ghostElement.style.paddingTop='8px';            _ghostElement.innerHTML='<div style="'+ cssText + '"></div>';                                               this.elm.parentNode.insertBefore(_ghostElement,this.elm.nextSibling);                                         this.elm.style.position="absolute";             this.elm.style.zIndex=100;             if(offLeft)dh.setStyle(this.elm,'left',offLeft + 'px');             if(offTop)dh.setStyle(this.elm,'top',offTop + 'px');                                     util.show();                            _ghostElement=null;                           this.isDragging=false ;             return true ;            },        when_Drag:function(clientX,clientY) {            var me=this;            if (!this.isDragging) {                this.elm.style.filter = "alpha(opacity=70)";                this.elm.style.opacity = 0.7;                this.isDragging = true;            }            var  found =null,distance ;            var  max_distance=100000000;            util.items.each(function(item){                if(!item || !item.elm) return;                if(me.elm==item.elm) return;                distance = Math.sqrt(Math.pow(clientX-item.elm.pagePosLeft,2) + Math.pow(clientY- item.elm.pagePosTop,2));                 if (typeof(distance)=='undefined' || distance==null || isNaN(distance)) return;                if (distance<max_distance){                    max_distance  = distance;                    found  =  item;                }distance=null;            });             var  _ghostElement = ghostEl.getElement();             if  (found !=null && _ghostElement.nextSibling != found.elm) {                found.elm.parentNode.insertBefore(_ghostElement, found.elm);                if(System.UserAgent.oprea) {                    document.body.style.display  = "none" ;                    document.body.style.display  = "";                }            }        },        end_Drag:function (){            if (this._afterDrag()) {                var item=this;                var dm=System.DragLayout.dataManager;                                var column=dh.findParentNode(item.elm,'[name=drag_column]',3);                if(column && /^[a-zA-Z]+[0-9]+$/.test(dh.id(column))){                   var oldColumnID=item.columnid;                   var newColumnID=dh.id(column).replace(dragCoumnIDPrefix,'');                   if((/^[0-9]+$/).test(oldColumnID) && (/^[0-9]+$/).test(newColumnID)){                     if(oldColumnID!=newColumnID){                        item.columnid=newColumnID;                        dm.updateColumnCookieData(newColumnID);                     }                     dm.updateColumnCookieData(oldColumnID);                    }                }column=null;            }            return true;              },        after_Drag:function() {            var returnValue = false;            util.hide();            this.elm.style.position = "";            this.elm.style.width = "";            this.elm.style.zIndex = "";            this.elm.style.filter = "";            this.elm.style.opacity = "";            var _ghostElement = ghostEl.getElement();            if (_ghostElement.nextSibling != this.origNextSibling) {                _ghostElement.parentNode.insertBefore(this.elm, _ghostElement.nextSibling);                returnValue = true;            }            ghostEl.moveBorder();            _ghostElement.parentNode.removeChild(_ghostElement);                        _ghostElement=null;                                    util.show();            if (System.UserAgent.opera) {                document.body.style.display = "none";                document.body.style.display = "block";            }            return returnValue;        }                            };})();System.DragLayout.controler=(function(){    var dm=System.DragLayout.dataManager;    var util=System.DragLayout.util;        return {        showMenu:function(){            var showFct=document.getElementById('showFct');            var dragFct=document.getElementById('dragFct');            if(showFct && dragFct){                showFct.style.display='none';                dragFct.style.display='block';            }showFct=null;dragFct=null;        },        hiddenMenu:function(){            var showFct=document.getElementById('showFct');            var dragFct=document.getElementById('dragFct');            if(showFct && dragFct){                showFct.style.display='block';                dragFct.style.display='none';            }showFct=null;dragFct=null;                },        loadItem:function(el){             if(el){                var item=dh.findParentNode(el,'[name=drag_item]',7);                if(item && (/^[a-zA-Z]+[0-9]+$/).test(item.id)){                    var columnID,itemObj=util.items.get(item.id.replace(dragItemIDPrefix,''));                    if(itemObj){                        if(itemObj.fold==0)itemObj.setFold();                        itemObj.loadContent();                    }                }item=null;            }el=null;                 },        resizeItem:function(el){   if(el){                var item=dh.findParentNode(el,'[name=drag_item]',7);                if(item && (/^[a-zA-Z]+[0-9]+$/).test(item.id)){                 var columnID,itemObj=util.items.get(item.id.replace(dragItemIDPrefix,''));                    if(itemObj){                        itemObj.resize();                    }                                                   }item=null;            }el=null;                },        foldItem:function(el){                       if(el){                var item=dh.findParentNode(el,'[name=drag_item]',7);                if(item && (/^[a-zA-Z]+[0-9]+$/).test(item.id)){                    var columnID,itemObj=util.items.get(item.id.replace(dragItemIDPrefix,''));                    if(itemObj){                        itemObj.setFold();                    }                }item=null;            }el=null;                  },        closeItem:function(el){            if(el){                var item=dh.findParentNode(el,'[name=drag_item]',7);                if(item && (/^[a-zA-Z]+[0-9]+$/).test(item.id)){                    var columnID,itemObj=util.items.get(item.id.replace(dragItemIDPrefix,''));                    if(itemObj){                     if(itemObj.resized==true){itemObj.resize();return}                     if(window.confirm('È·ÊµÒª´Ó²¼¾ÖÉÏÒÆ³ý¸Ã²¿¼þÂð?\n(ÒÆ³ýºó¿ÉÒÔ´Ó¡°Ñ¡Ïî¡±²Ëµ¥ÖÐ»Ö¸´Ä¬ÈÏ²¼¾Ö)')){                         columnID=itemObj.columnid;                         dh.remove(item);                         util.items.remove(itemObj);                         dm.updateColumnCookieData(columnID);                     }                    }                }item=null;            }el=null;        },        replaceLayout:function(){          dm.removeCookieData();window.location.reload();        },        createLayout:function(){   var params="";   var o={};var ipts=dh.DomQuery.select("#transferArea input[type=hidden]");   if(ipts && ipts.length){    var iptid;    for(var i=0;i<ipts.length;i++){     iptid=ipts[i].id;     if(iptid!="Page_ID" && iptid!="RelationType"      && iptid!="Type_ID" && iptid!="Type_Code"     && iptid!="Cache_Data" && iptid!="BindGlobalRelation")     {o[iptid]=ipts[i].value;}    }   }ipts=null;transferData=ajax.buildPostData(o);   var tID=document.getElementById("Type_ID");   if(tID && tID.nodeType && tID.value && /^\d+$/.test(tID.value)){    dragItemsCookieName+=tID.value + '-';    params+="&Type_ID=" + tID.value;    }   var tCode=document.getElementById("Type_Code");   if(tCode && tCode.nodeType && tCode.value){    dragItemsCookieName+=tCode.value + '-';    params+="&Type_Code=" + tCode.value;    }   var rType=document.getElementById("RelationType");   if(rType && rType.nodeType && rType.value!=""){     dragItemsCookieName+=rType.value + '-';     params+="&RelationType=" + rType.value;    }else{    var pID=document.getElementById("Page_ID");    if(pID && pID.value && /^\d+$/.test(pID.value)){     dragItemsCookieName+=pID.value + '-';     params+="&Page_ID=" + pID.value;     }pID=null;       }   var tCData=document.getElementById("Cache_Data");   if(tCData && tCData.nodeType){    params+="&Cache_Data=" + tCData.value;   }tCData=null;   var bGRelation=document.getElementById("BindGlobalRelation");   if(bGRelation && bGRelation.nodeType){    params+="&BindGlobalRelation=" + bGRelation.value;   }bGRelation=null;   params+="&radomt=" + Math.random();   var ct=System.get(contentObjectID);   if(ct){ct.setHeight(dh.getViewHeight(true));}ct=null;                 dm.init(params);            this.createMenu();        },        createMenu:function(){    if(!document.body) return;   var menu=System.query('#' + dh.id(document.body) + ' div[name=drag_menu]');   if(!menu || !menu.length){    var html='<div name="drag_menu" class="c_hideFct">' +           '<a class="showFct" href="javascript:void(0);" id="showFct" onclick="javascript:System.DragLayout.controler.showMenu();"></a>'+           '<div class="fct" id="dragFct">' +            '<ul class="e_clear">' +             '<li><a class="resume" href="javascript:void(0);" onclick="javascript:System.DragLayout.controler.replaceLayout();">»Ö¸´²¼¾Ö</a></li>'+             '<!--<li><a class="save" href="#nogo">±£´æ²¼¾Ö</a></li>'+             '<li><a class="refresh" href="#nogo">Ë¢ÐÂÊý¾Ý</a></li>-->'+            '</ul>'+            '<div class="close"><a href="javascript:void(0);" onclick="javascript:System.DragLayout.controler.hiddenMenu();"></a></div>' +            '<div class="shadow"></div>'+            '<div class="shadow2"></div>'+           '</div>' +          '</div>';    dh.insertHtml('beforeend',document.body,html);         }               }                               };})();System.onLoad(System.DragLayout.controler.createLayout,System.DragLayout.controler);})();  
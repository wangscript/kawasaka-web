(function(){if(typeof(System.Data)=='undefined'){ Include('support/data.js');}var dh=System.DomHelper;Wade.ajax=(function(){ var util=Wade.util; var dom=Wade.dom; var context=Wade.context; var page=Wade.page;           var formDataElementTags=["input","select","textarea"]; var exceptDataKey=["listener","service","sp"]; var ajaxErrorMsg="\u7F51\u7EDC\u8FDE\u63A5\u8D85\u65F6\u6216\u670D\u52A1\u5668\u7E41\u5FD9\uFF0C\u8BF7\u91CD\u8BD5";  function buildFormData(form,group,istrim){  if(!(typeof(form)=="object" || typeof(form)=="string"))return "";  if(typeof(form)=="string" && form!=="")form=document.getElementById(form);  if(!form || !form.nodeType) return "";    var hasGroup=(typeof(group)=="string" && group!="");  var formID=dh.id(form),formName=form.name;  var elements,tag,key,value,o={};  exceptDataKey.push(formName);  elements=System.query(formDataElementTags.join(","),formID);  if(elements && elements.length){   for(var j=0;j<elements.length;j++){    if(!elements[j].disabled && elements[j].name && elements[j].name!=''){     if(!hasGroup || (hasGroup && elements[j].name.startsWith(group))){      key=elements[j].name;      if(hasGroup && istrim==true){key=key.substring(group + "-");}      if(!exceptDataKey.contains(key)){       value=dom.getFormElementValue(elements[j].tagName.toLowerCase(),elements[j]);       if(typeof(value)=="string"){        if(typeof(o[key])!="undefined"){         if(o[key] instanceof Array){          o[key].push(value);         }else{          o[key]=[o[key]];          o[key].push(value);         }         }else{o[key]=value;}        }      }     }    }   }  }elements=null;tag=null;key=null;tag=null;value=null;  exceptDataKey.splice(exceptDataKey.length-1,1);   var s=System.Common.urlEncode(o);o=null;  return s; }; function ajaxBegin(){    dom.unfocusActiveInputElement();  if (Wade.ajax.AjaxLoading){    page.beginPageLoading();     } };  function ajaxEnd(){    if (Wade.ajax.AjaxLoading){    if(page.isPageLoading()){    page.endPageLoading();    Wade.event.clearEnterEventButton();   }     } };    function ajaxGet(reqUrl,p,d,fn,runFailureFn){  reqUrl = reqUrl+'&ajaxSubmitType=get';  reqUrl+="&ajax_randomcode=" + Math.random();  ajaxBegin();  new System.AjaxRequest(reqUrl,{method:"get"},function(r){handlerAdapter(r,p,d,fn);},(runFailureFn!=null && typeof(runFailureFn)!="undefined" && runFailureFn==false)?System.emptyFn:failureFn); };  function ajaxPost(reqUrl,p,postData,d,fn,runFailureFn){  reqUrl = encodeURI(reqUrl+'&ajaxSubmitType=post');  reqUrl+="&ajax_randomcode=" + Math.random();  ajaxBegin();  new System.AjaxRequest(reqUrl, {method:"post",postbody:postData},function(r){handlerAdapter(r,p,d,fn);},(runFailureFn!=null && typeof(runFailureFn)!="undefined" && runFailureFn==false)?System.emptyFn:failureFn); };  function failureFn(){  ajaxEnd();  alert(ajaxErrorMsg); }  function handlerAdapter(r,p,d,fn){  if(!d && typeof(fn)=='function'){   if(fn.apply((p || window),[r]))ajaxEnd();  }else{   defaultCompleteHandler(r,fn,p);  } };  function defaultCompleteHandler(response,fn,p) {  var scripts = "";  var root,json,ds;  var parser,xml;        if(System.UserAgent.ie){            xml = new ActiveXObject("Msxml2.FreeThreadedDOMDocument");            xml.async=false;xml.resolveExternals = false;            xml.loadXML(response.responseText);        }else{            xml = (new DOMParser()).parseFromString(response.responseText, "text/xml");        }         root = xml.documentElement || xml;    if (root == null || root.nodeName!="parts") {   root=null;   page.removeLoadingMsg();   Include("module/excedesc.js");   var bodyhtml=System.Common.extractBodyHtml(response.responseText);   if(!bodyhtml || bodyhtml==""){ajaxEnd();alert(ajaxErrorMsg);}else{   dh.insertHtml("beforeend",document.body,bodyhtml);   if(typeof(Wade.excedesc)!="undefined"){    Wade.excedesc.AsyncError=true;Wade.excedesc.initExceDesc();}   }bodyhtml=null;  }else {   var partNodes = root.childNodes;   var scArr=null,part,tfdArea,partId,partElement,content;   var foundTfd,tids,ipts,ipt,namev;   for (var i = 0; i < partNodes.length; i++) {    part = partNodes[i];    if(part.nodeName=="TRANSFERDATA" && part.childNodes[0]!=null){     tfdArea=document.getElementById("transferArea");     if(tfdArea==null || !tfdArea ||!tfdArea.nodeType){      if(document.forms[0]){tfdArea=dh.insertFirst(document.forms[0],{tag:"div",id:"transferArea",style:{display:"none"}});}     }     if(tfdArea!=null && tfdArea && tfdArea.nodeType){      foundTfd=false;tids=[];ipts=dh.DomQuery.select("#" + dh.id(tfdArea) + " input[type=hidden]");      if(ipts && ipts.length){       for(var ii=0;ii<ipts.length;ii++){tids.push(dh.id(ipts[ii]));}      }ipts=null;      for(var ii=0;ii<part.childNodes.length;ii++){       foundTfd=false;namev=part.childNodes[ii].getAttribute("name");       if(tids && tids.length){for(var iii=0;iii<tids.length;iii++){if(tids[iii]==namev)foundTfd=true;}}       if(foundTfd==true){ipt=document.getElementById(namev);}       else{ipt=dh.insertFirst(tfdArea,{tag:"input",type:"hidden",id:namev,name:namev});}       if(ipt && ipt.nodeType){ipt.value=part.childNodes[ii].childNodes[0].nodeValue;}      }     }    }else if(part.nodeName == "JSONDATA" && part.childNodes[0]!=null){     json=System.Common.parseJSON(part.childNodes[0].nodeValue);    }else if(part.nodeName=="DATASETDATA" && part.childNodes[0]!=null){     ds=new Wade.DatasetList(part.childNodes[0].nodeValue);    }else if (part.nodeName=="part" && part.attributes) {     partId = part.attributes[0].value;     partElement = document.getElementById(partId);     if (partElement) {      if (part.childNodes != null && part.childNodes.length > 0) {       content = "";       for (var ii = 0; ii < part.childNodes.length; ii++) {        content += part.childNodes[ii].nodeValue;       }       if (partElement.innerHTML != content) {        partElement.innerHTML = content;        scArr=System.Common.extractScripts(content);        if((scArr instanceof Array) && scArr.length>0){         scripts += scArr.join(";") + ";";         scripts=scripts.replace(/<!--|\/\/-->/ig,"");         }scArr=null;       }      } else {              partElement.innerHTML="";      }     }    }   }   foundTfd=null;tids=null;ipts=null;ipt=null;namev=null;   part=null;tfdArea=null;partElement=null;partId=null;content=null;   partNodes=null;   if(!p || typeof(p)!="object"){p=window;}else if(typeof(p.afterAction)=="string" && p.afterAction!=""){    scripts+=p.afterAction;    p.afterAction=null;   }   System.apply(p,{    ajaxData:(json||[]),    ajaxDataset: (ds || new Wade.DatasetList())   });   if(scripts!="")(function(){eval(scripts);}).apply(p,[]);   if(typeof(fn)=="function"){    fn.apply(p,[response,(json || []),ds]);     }scripts=null;    }  root=null;parser=null;delete xml;xml=null;   ajaxEnd();  delete response;response=null;  delete json;json=null;  delete ds;ds=null; };  return {  AjaxLoading:true,  setAjaxLoading:function (isloading) {   Wade.ajax.AjaxLoading = isloading;  },  buildPostData:function(o){   return System.Common.urlEncode(o);  },  buildFormData:function(form){   return buildFormData(form);  },  getDataByStr:function(obj,group,istrim){   var form=dom.getParentForm(obj);   if(form){    return buildFormData(form,group,istrim);   }   return null;  },  get:function(url,scope,fn,runFailureFn){   ajaxGet(url,scope,false,fn,runFailureFn);  },  post:function(url,scope,postbody,fn,runFailureFn){   ajaxPost(url,scope,postbody,false,fn,runFailureFn);  },  ajaxGet:function(page,listener,params,partids,israw,d,fn,runFailureFn){   var url=context.getAsyncUrl(page, listener, params, partids, israw);   if(page==null || page==""){page=context.getPageName();}   if(!d)d=true;ajaxGet(url,page,d,fn,runFailureFn);  },  ajaxPost:function(page,listener,params,partids,israw,postbody,d,fn,runFailureFn){   var url=context.getAsyncUrl(page, listener, params, partids, israw);   if(page==null || page==""){page=context.getPageName();}   if(!d)d=true;ajaxPost(url,page,postbody,d,fn,runFailureFn);  },  ajaxDirect:function(page, listener, params, partids, israw,fn,runFailureFn) {   var url="";   if(page==null || page==""){page=context.getPageName();}   if(typeof(params)=="string" && params!="" && params.length>2000){    url=context.getAsyncUrl(page, listener, null, partids, israw);    params=System.Common.parseUrlParams(params);    ajaxPost(url,page,params,true,fn,runFailureFn);   }else{    url=context.getAsyncUrl(page, listener, params, partids, israw);    ajaxGet(url,page,true,fn,runFailureFn);   }  },  ajaxSubmit:function(page,listener,params,partids,formIds,israw,fn,runFailureFn){   if (document.forms.length == 0) {    alert('form tag not exist');    return;   }   var url=context.getAsyncUrl(page, listener, params, partids, israw);   var obj=dom.getElementBySrc();   var formData="";      if (formIds) {    formIds = formIds.split(",");    for(i=0;i<formIds.length;i++){     if (!dom.getElement(formIds[i])){      alert("can't get form (" + formIds[i] + ")");      continue;     }     formData += buildFormData(formIds[i]) + '&';    }formIds=null;   } else {        var formNode = dom.getParentForm(obj);    if (typeof(formNode)=='undefined' || !formNode || !formNode.nodeType){     formNode = document.forms[0];    }    formData = buildFormData(formNode);formNode=null;   }obj=null;      ajaxPost(url,page,formData,true,fn,runFailureFn);  } };})();Wade.pub(Wade.ajax); })();
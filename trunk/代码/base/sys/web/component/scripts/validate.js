(function(){var uispt=(typeof(System.UI)!="undefined" && typeof(System.UI.Components)!="undefined" && false);var msgTitle="\u63D0\u793A\u4FE1\u606F";if(uispt==true){ };function alertMessage(msg,field){ if(uispt===true){  System.UI.Components.MessageBox.alert(msgTitle, msg, function(){if(typeof(field)!="undefined" && field.nodeType)Wade.dom.focus(field);}); }else{  alert(msg);  if(typeof(field)!="undefined" && field.nodeType)Wade.dom.focus(field); }  };Wade.verifylib=(function(){ var util=Wade.util; var dom=Wade.dom; return {  checkLength:function (field, length, desc) {   if (field.value != "" && util.getLength(field.value) != length) {    var msg=desc + "\u957F\u5EA6\u5FC5\u987B\u4E3A" + length + "\u0021";    alertMessage(msg,field);    return false;   }   return true;  },  checkMinLength:function(field, length, desc) {   if (field.value != "" && util.getLength(field.value) < length) {    var msg=desc + "\u6700\u5C0F\u957F\u5EA6\u4E0D\u80FD\u4F4E\u4E8E" + length + "\u0021";    alertMessage(msg,field);    return false;   }   return true;  },  checkMaxLength:function(field, length, desc) {   if (field.value != "" && util.getLength(field.value) > length) {    var msg=desc + "\u6700\u5927\u957F\u5EA6\u4E0D\u80FD\u8D85\u8FC7" + length + "\u0021";    alertMessage(msg,field);    return false;   }   return true;  },  checkText:function(field, desc) {   var msg="";   if (field.tagName == "INPUT" && field.type != null && (field.type.toUpperCase() == "CHECKBOX" || field.type.toUpperCase() == "RADIO")) {    if (field.name != null) {     if (dom.getCheckedBoxNum(field.name) == 0) {      msg=desc + "\u4E3A\u5FC5\u9009\u9879\uFF01";      alertMessage(msg,field);      return false;     }    }   } else {    if (field.value == "") {     msg=desc + "\u4E0D\u80FD\u4E3A\u7A7A\uFF01";     alertMessage(msg,field);     return false;    }   }   return true;  },  checkInteger:function(field, desc) {   if (!/^(-|\+)?\d+$/.test(field.value) && field.value != "") {    var msg=desc + "\u5FC5\u987B\u4E3A\u6574\u6570\uFF01";    alertMessage(msg,field);    return false;   }   if (!Wade.verifylib.checkNumberRange(field, desc)) return false;   return true;  },  checkPInteger:function (field, desc) {   if (!/^\d+$/.test(field.value) && field.value != "") {    var msg=desc + "\u5FC5\u987B\u4E3A\u5927\u4E8E\u6216\u7B49\u4E8E\u96F6\u7684\u6574\u6570\uFF01";    alertMessage(msg,field);    return false;   }   if (!Wade.verifylib.checkNumberRange(field, desc)) return false;   return true;  },  checkNInteger:function(field, desc) {   if (!/^-\d+$/.test(field.value) && field.value != "") {    var msg=desc + "\u5FC5\u987B\u4E3A\u5C0F\u4E8E\u96F6\u7684\u6574\u6570\uFF01";    alertMessage(msg,field);    return false;   }   if (!Wade.verifylib.checkNumberRange(field, desc)) return false;   return true;  },  checkNumeric:function(field, desc) {   if (!/^(-|\+)?\d+(\.\d+)?$/.test(field.value) && field.value != "") {    var msg=desc + "\u5FC5\u987B\u4E3A\u6570\u5B57\uFF01";    alertMessage(msg,field);    return false;   }   var format = dom.getAttributeValue(field, "format", "");   if (format != "" && format.indexOf(".") != -1 && field.value != "") {    var fieldValue = parseFloat(field.value);    if (fieldValue < 0) {     fieldValue = -fieldValue;    }    fieldValue = fieldValue.toString();    if (fieldValue.indexOf(".") != -1 && (format.length - format.indexOf(".") < fieldValue.length - fieldValue.indexOf("."))) {     var msg=desc + "\u5FC5\u987B\u4E3A\u6570\u5B57\u683C\u5F0F(" + format + ")";     alertMessage(msg,field);     return false;    }   }   if (!Wade.verifylib.checkNumberRange(field, desc)) return false;   return true;  },  checkNature:function(field, desc) {   if ((!/^\d+$/.test(field.value) || !/[^0]/.test(field.value)) && field.value != "") {    var msg=desc + "\u5FC5\u987B\u4E3A\u5927\u4E8E\u96F6\u7684\u6574\u6570\uFF01";    alertMessage(msg,field);    return false;   }   if (!Wade.verifylib.checkNumberRange(field, desc)) return false;   return true;  },  checkNumberRange:function(field, desc) {   if (dom.getAttributeValue(field, "min", "") != "" && parseInt(field.value) < parseInt(field.getAttribute("min"))) {    var msg=desc + "\u4E0D\u80FD\u5C0F\u4E8E(" + field.getAttribute("min") + ")\uFF01";    alertMessage(msg,field);    return false;   }   if (dom.getAttributeValue(field, "max", "") != "" && parseInt(field.value) > parseInt(field.getAttribute("max"))) {    var msg=desc + "\u4E0D\u80FD\u5927\u4E8E(" + field.getAttribute("max") + ")\uFF01";    alertMessage(msg,field);    return false;   }   return true;  },  checkDate:function(field, format, desc) {   var m,v=field.value;   if (v!= ""){    var msg="",d=v.toDate(format);    if(v.length != format.length || !d) {     msg=desc + ":\u65E5\u671F\u4E0D\u5408\u6CD5\u6216\u4E0E\u683C\u5F0F(" + format + ")\u4E0D\u7B26";     alertMessage(msg,field);     return false;    }else{     if(!d.compare(v,format)){      msg=desc + ":\u9519\u8BEF\u7684\u65E5\u671F";      alertMessage(msg,field);      return false;     };    }    if (dom.getAttributeValue(field, "min", "") != "" && v < field.getAttribute("min")) {     msg=desc + "\u4E0D\u80FD\u5C0F\u4E8E(" + field.getAttribute("min") + ")\uFF01";     alertMessage(msg,field);     return false;    }    if (dom.getAttributeValue(field, "max", "") != "" && v > field.getAttribute("max")) {     msg=desc + "\u4E0D\u80FD\u5927\u4E8E(" + field.getAttribute("max") + ")\uFF01";     alertMessage(msg,field);     return false;    }    if (dom.getAttributeValue(field, "minName", "") != "") {     var minField = dom.getElement(field.getAttribute("minName"));      if (minField != null && minField.value != "" && minField.getAttribute("desc") != null && field.value < minField.value) {      msg=desc + "\u4E0D\u80FD\u5C0F\u4E8E" + minField.getAttribute("desc") + "\uFF01";      alertMessage(msg,field);      return false;     }    }    if (dom.getAttributeValue(field, "maxName", "") != "") {     var maxField = dom.getElement(field.getAttribute("maxName"));      if (maxField != null && maxField.value != "" && maxField.getAttribute("desc") != null && field.value > maxField.value) {      msg=desc + "\u4E0D\u80FD\u5927\u4E8E" + maxField.getAttribute("desc") + "\uFF01";      alertMessage(msg,field);      return false;     }    }   }   return true;  },  checkEmail:function(field, desc) {   if (!/^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/.test(field.value) && field.value != "") {    var msg=desc + "\u5FC5\u987B\u4E3A\u0045\u004D\u0061\u0069\u006C\u683C\u5F0F\uFF01";    alertMessage(msg,field);    return false;   }   return true;  },  checkFile:function(field, desc) {   var extname = dom.getAttributeValue(field, "extname", "");   if (extname != "" && field.value) {    var exts = extname.split(",");    for (var i=0; i<exts.length; i++) {     if (field.value.toUpperCase().endsWith(exts[i].toUpperCase())) return true;    }        var msg=desc + "\u5FC5\u987B\u4E3A\u6307\u5B9A\u7684(" + extname + ")\u6587\u4EF6\u7C7B\u578B\uFF01";    alertMessage(msg,field);    return false;   }   return true;  },  checkMbphone:function(field, desc) {   if (!/^[0-9]+$/.test(field.value) && field.value != "" && (field.value.length>7 && field.value.length<18)) {    var msg=desc + "\u5fc5\u987b\u4e3a\u624b\u673a\u53f7\u7801\u683c\u5f0f\uff01";    alertMessage(msg,field);    return false;   }   return true;  },  checkPspt:function(field, desc) {   if(!field || !field.nodeType || field.value==""){    var msg=desc + "\u4E3A\u7A7A\u6216\u4E0D\u5B58\u5728";    alertMessage(msg,field);    return false;   }   var Errors=new Array(    "\u9A8C\u8BC1\u901A\u8FC7\u0021",    "\u8EAB\u4EFD\u8BC1\u53F7\u7801\u4F4D\u6570\u4E0D\u5BF9\u0021",    "\u8EAB\u4EFD\u8BC1\u53F7\u7801\u4E0D\u5408\u6CD5",    "\u8EAB\u4EFD\u8BC1\u53F7\u7801\u6821\u9A8C\u9519\u8BEF\u0021",    "\u8EAB\u4EFD\u8BC1\u5730\u533A\u975E\u6CD5\u0021",    "\u8EAB\u4EFD\u8BC1\u51FA\u751F\u65E5\u671F\u4E0D\u7B26\u5408\u8981\u6C42\uFF0C\u662F\u5426\u7EE7\u7EED\uFF1F"   );   var area={11:"\u5317\u4EAC",12:"\u5929\u6D25",13:"\u6CB3\u5317",14:"\u5C71\u897F",15:"\u5185\u8499\u53E4",21:"\u8FBD\u5B81",22:"\u5409\u6797",23:"\u9ED1\u9F99\u6C5F",31:"\u4E0A\u6D77",32:"\u6C5F\u82CF",33:"\u6D59\u6C5F",34:"\u5B89\u5FBD",35:"\u798F\u5EFA",36:"\u6C5F\u897F",37:"\u5C71\u4E1C",41:"\u6CB3\u5357",42:"\u6E56\u5317",43:"\u6E56\u5357",44:"\u5E7F\u4E1C",45:"\u5E7F\u897F",46:"\u6D77\u5357",50:"\u91CD\u5E86",51:"\u56DB\u5DDD",52:"\u8D35\u5DDE",53:"\u4E91\u5357",54:"\u897F\u85CF",61:"\u9655\u897F",62:"\u7518\u8083",63:"\u9752\u6D77",64:"\u5B81\u590F",65:"\u65B0\u7586",71:"\u53F0\u6E7E",81:"\u9999\u6E2F",82:"\u6FB3\u95E8",91:"\u56FD\u5916"};    var idcard=field.value,Y,JYM;   var S,M,ereg;   var idcard_array = new Array();   idcard_array = idcard.split("");   if(!area[parseInt(idcard.substr(0,2),10)]){    alertMessage(Errors[4],field);    return false ;    }       switch(idcard.length){    case 15:     if((parseInt(idcard.substr(6,2))+1900) % 4 == 0 || ((parseInt(idcard.substr(6,2))+1900) % 100 == 0 && (parseInt(idcard.substr(6,2))+1900) % 4 == 0 )){      ereg=/^[1-9][0-9]{5}([0-9]{2})((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}$/;      }else{      ereg=/^[1-9][0-9]{5}([0-9]{2})((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-9]))[0-9]{3}$/;      }     if(ereg.test(idcard)){       var matches=idcard.match(ereg);      var nowY=(new Date()).getFullYear();      if(typeof(matches)=="object" && (matches instanceof Array)        && matches.length){        if(parseInt(("19" + matches[1].toString()),10)+100<nowY){         return confirm(Errors[5]);        }        }matches=null;      return true;           }else{      alertMessage(Errors[2],field);      return false;      }     break;    case 18:     if(parseInt(idcard.substr(6,4)) % 4 == 0 || (parseInt(idcard.substr(6,4)) % 100 == 0 && parseInt(idcard.substr(6,4))%4 == 0 )){      ereg=/^[1-9][0-9]{5}((19|20)[0-9]{2})((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}[0-9Xx]$/;       }else{      ereg=/^[1-9][0-9]{5}((19|20)[0-9]{2})((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-9]))[0-9]{3}[0-9Xx]$/;      }     if(ereg.test(idcard)){            var matches=idcard.match(ereg);      var nowY=(new Date()).getFullYear();      if(typeof(matches)=="object" && (matches instanceof Array)        && matches.length){        matches=parseInt(matches[1],10);        if((matches+15)>nowY || (matches+100)<nowY){         return confirm(Errors[5]);        }      }matches=null;      return true;     }else {      alertMessage(Errors[2],field);      return false;      }    break;    default:     alertMessage(Errors[1],field);     return false ;     break;   }      return true;  },  checkIp:function(field, desc) {   if (!/^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/.test(field.value) && field.value != "") {    var msg=desc + "\u5fc5\u987b\u4e3aIP\u5730\u5740\u683c\u5f0f\uff01";    alertMessage(msg,field);    return false;   }   return true;  },  checkNumChar:function(field,desc){   if (!/^[a-zA-Z0-9]+$/.test(field.value) && field.value != "") {    var msg=desc + "\u5FC5\u987B\u4E3A\u6570\u5B57\u548C\u5B57\u6BCD\u7684\u7EC4\u5408\uFF01";    alertMessage(msg,field);    return false;   }   return true;     },  checkNumUChar:function(field,desc){   if (!/^[A-Z0-9]+$/.test(field.value) && field.value != "") {    var msg=desc + "\u5FC5\u987B\u4E3A\u6570\u5B57\u548C\u5927\u5199\u5B57\u6BCD\u7684\u7EC4\u5408\uFF01";    alertMessage(msg,field);    return false;   }   return true;     },  checkNumLChar:function(field,desc){   if (!/^[a-z0-9]+$/.test(field.value) && field.value != "") {    var msg=desc + "\u5FC5\u987B\u4E3A\u6570\u5B57\u548C\u5C0F\u5199\u5B57\u6BCD\u7684\u7EC4\u5408\uFF01";    alertMessage(msg,field);    return false;   }   return true;     } }; })();Wade.pub(Wade.verifylib);Wade.validate=(function(){ var util=Wade.util; var dom=Wade.dom; var context=Wade.context; var event=Wade.event; var page=Wade.page; var verifylib=Wade.verifylib;  var wadeDisabledElements = new Array;  function submitCheck(){  var r=true,enable=true;     var f=dom.getElement("wade_sbtframe");     if(f){      var afterloading=f.getAttribute("afterloading");      afterloading=(typeof(afterloading)=="string" && afterloading=="true");      try{       var doc=f.contentWindow.document;          if(doc){           if(afterloading && doc.readyState=="complete"){            var pc=doc.getElementById("pagecontext");            if(!pc || !pc.nodeType){             enable=false;            }pc=null;            r=false;           }          }       doc=null;      }catch(ex){       enable=false;       r=false;      }       if(enable==false){       alert("\u7F51\u7EDC\u8FDE\u63A5\u8D85\u65F6\u6216\u670D\u52A1\u5668\u7E41\u5FD9\uFF0C\u8BF7\u5173\u95ED\u91CD\u8BD5");       try{f.contentWindow.location.href = "about:blank";}catch(ex){}       resetSubmit();       page.endPageLoading();      }      if(enable==false || r==false){       f.setAttribute("afterloading","false");          f.setAttribute("submited","false");      }      enable=null;      f=null;     }     return r;    };  var submitCheckTask = {     run:submitCheck,     interval:500  };   function setConfirmInfo(object, info,value) {  var srcobj = dom.getElementBySrc();  if (info == null || info == "") {   var srcvalue = util.trimEmpty((srcobj.getAttribute('value') || srcobj.value));   if(!srcvalue)srcvalue='';   var srcdesc = srcobj.getAttribute("desc");   if (!srcdesc) srcdesc = "";   info = "\u786E\u5B9A\u8981" + srcvalue + srcdesc + "\u5417\uFF1F";  }  value=false;         value=window.confirm(info);    return value; };  function getVerifyElements(object, isopen) {  var elements=null;  var childs = [];  if(object){   if (typeof(object) == "object") {    if (object.form == null) {     for (var i=0; i<document.forms.length; i++) {      elements = document.forms[i].elements;      if(elements && elements.length){       for(var j=0;j<elements.length;j++){childs.push(elements[j]);}      }      }    } else {     childs = object.form.elements;    }   } else if (typeof(object) == "string") {    var areaobj = dom.getElement(object);    if (areaobj == null) {     alert(object + " not exist!");     return false;    }    childs = dom.getChildsByRecursion(areaobj, null, "desc");   }  }  if (childs == null) {   alert(object + " define error!");   return false;  }  elements=[];  for (var i=0; i<childs.length; i++) {   var element = childs[i];   if (element.disabled) {    elements.push(element);    continue;   }   if(isopen == null || isopen == false) {    if (element.getAttribute("desc") == null) continue;    if (!Wade.validate.verifyField(element)) return { "result" : false };   }  }    return { "result" : true, "elements" : elements }; };  function setConfirmSubmit(isClear) {  var f=dom.getElement("wade_sbtframe");  if (f && f.nodeType) {   for (var i=0; i<document.forms.length; i++) {    if(isClear){     document.forms[i].target = "";     if(System.UserAgent.ie){      f.setAttribute("submited","false");      System.TaskMgr.stop(submitCheckTask);     }    }else{     document.forms[i].target = "wade_sbtframe";     if(System.UserAgent.ie){      f.setAttribute("submited","true");      System.TaskMgr.start(submitCheckTask);     }     }    }  }f=null; }; function createChildHidden(wrapobj, name, value) {  if (value == null) return null;  var hidobj = document.createElement("input");  hidobj.type = "hidden";  hidobj.id = name;  hidobj.name = name;  hidobj.value = value;  wrapobj.appendChild(hidobj);  return hidobj; };  function resetSubmit(){  event.clearEnterEventButton(); } return {  getDisabledElements:function(){   return wadeDisabledElements;  },     disableAllElements:function (object, isdisabled) {   var disabled = isdisabled == null || isdisabled;   var elements = null;      if (typeof(object) == "object") {    if (object.tagName == "FORM") {     elements = object.elements;    } else {     if (object.form == null) {      var els;if (elements == null) elements = [];      for (var i=0; i<document.forms.length; i++) {        els= document.forms[i].elements;        if(els && els.length){         for(var j=0;j<els.length;j++)elements.push(els[j]);        }      }     } else {      elements = object.form.elements;     }    }   } else if (typeof(object) == "string") {    var areaobj = dom.getElement(object);    if (areaobj == null) {     alert(object + " not exist!");    } else {     elements = dom.getChildsByRecursion(areaobj, null,"desc");    }   }      if (elements != null) {    for (var i=0; i<elements.length; i++) {     dom.disabled(elements[i],disabled);    }   }  },  setDisabledElements:function(elements, isdisabled) {   if (elements != null) {    for (var i=0; i<elements.length; i++) {     dom.disabled(elements[i],isdisabled);    }    if (isdisabled) {     wadeDisabledElements.clear();    } else {     wadeDisabledElements = elements;    }   }  },  initialAll:function (obj) {   for (var i=0; i<document.forms.length; i++) {    var theForm = document.forms[i];    var pagevisit = context.getPageVisit();    if (dom.getElement("staffId") == null) {     createChildHidden(theForm, "staffId", pagevisit.staffId);    }    if (dom.getElement("subSysCode") == null) {     createChildHidden(theForm, "subSysCode", pagevisit.subSysCode);    }    if (dom.getElement("eparchyCode") == null) {     createChildHidden(theForm, "eparchyCode", pagevisit.eparchyCode);    }     var enctype=theForm.getAttribute("enctype");       if (typeof(enctype)=="string" && enctype.toUpperCase() == "MULTIPART/FORM-DATA") {     var formParams = dom.getElement("_FormParams");     if (formParams == null) {      formParams = document.createElement("INPUT");      formParams.setAttribute("id","_FormParams");      formParams.setAttribute("name","_FormParams");      formParams.setAttribute("type","hidden");      theForm.appendChild(formParams);     }          var params = formParams.value;if(typeof(params)=="string" && params!="")params+=",";     var elements = theForm.elements;     for (var i=0; i<elements.length; i++) {      var theType = elements[i].type;      if (theType != null && theType.toUpperCase() != "FILE") {       params = params + elements[i].name + ",";      }     }     formParams.value = params;    }   }   return true;  },  verifyField:function(field) {   if (field.tagName == "INPUT" && field.type.toUpperCase() == "TEXT" || field.tagName == "TEXTAREA") {    field.value = field.value.trim();   }       if (field.getAttribute("nullable") == "no" && !verifylib.checkText(field, field.getAttribute("desc"))) return false;      if (dom.getAttributeValue(field, "equsize", "") != "" && !verifylib.checkLength(field, field.getAttribute("equsize"), field.getAttribute("desc"))) return false;   if (dom.getAttributeValue(field, "minsize", "") != "" && !verifylib.checkMinLength(field, field.getAttribute("minsize"), field.getAttribute("desc"))) return false;   if (dom.getAttributeValue(field, "maxsize", "") != "" && !verifylib.checkMaxLength(field, field.getAttribute("maxsize"), field.getAttribute("desc"))) return false;      var error = true;   switch (field.getAttribute("datatype")) {    case "integer" : error = verifylib.checkInteger(field, field.getAttribute("desc")); break;    case "pinteger" : error = verifylib.checkPInteger(field, field.getAttribute("desc")); break;    case "ninteger" : error = verifylib.checkNInteger(field, field.getAttribute("desc")); break;    case "numeric" : error = verifylib.checkNumeric(field, field.getAttribute("desc")); break;    case "nature" : error = verifylib.checkNature(field, field.getAttribute("desc")); break;    case "date" : error = verifylib.checkDate(field, field.getAttribute("format"), field.getAttribute("desc")); break;    case "email" : error = verifylib.checkEmail(field, field.getAttribute("desc")); break;    case "file" : error = verifylib.checkFile(field, field.getAttribute("desc")); break;    case "mbphone" : error = verifylib.checkMbphone(field, field.getAttribute("desc")); break;    case "pspt" : error = verifylib.checkPspt(field, field.getAttribute("desc")); break;    case "ip" : error = verifylib.checkIp(field, field.getAttribute("desc")); break;    case "numchar":error=verifylib.checkNumChar(field, field.getAttribute("desc"));break;    case "numuchar":error=verifylib.checkNumUChar(field, field.getAttribute("desc"));break;    case "numlchar":error=verifylib.checkNumLChar(field, field.getAttribute("desc"));break;   }   if (!error) return false;      return true;  },  verifyAll:function(object) {   var rscoll = getVerifyElements(object);   var result = rscoll["result"];   if (!result){resetSubmit();return false;}   return result;  },  verifyBox:function(object, boxName, info) {   if (dom.getCheckedBoxNum(boxName) == 0) {    if (info == null || info == "") info = "\u8BF7\u9009\u4E2D\u8981\u64CD\u4F5C\u7684\u6570\u636E\uFF01";    alertMessage(info);    resetSubmit();    return false;   }   return true;  },   queryOper:function(object, info) {   Wade.validate.disableAllElements(object, false);      if (!initialAll(object)){resetSubmit(); return false;}   page.submitLoading();   setConfirmSubmit(true);   return true;  },  confirmOper:function (object) {   Wade.validate.disableAllElements(object, false);     initialAll(object);   page.submitLoading();   setConfirmSubmit();      return true;  },  queryAll:function(object) {   var rscoll = getVerifyElements(object);   if (!rscoll["result"]){resetSubmit(); return false;}      var elements = rscoll["elements"];   Wade.validate.setDisabledElements(elements, false);      if (!initialAll(object)){resetSubmit(); return false;}   page.submitLoading();   setConfirmSubmit(true);   return true;  },  confirmAll:function(object) {   var rscoll = getVerifyElements(object);   if (!rscoll["result"]){resetSubmit(); return false;}      var elements = rscoll["elements"];   Wade.validate.setDisabledElements(elements, false);      if (!initialAll(object)){resetSubmit(); return false;}   page.submitLoading();   setConfirmSubmit();     return true;  },  queryInfo:function(object, info) {   if (!setConfirmInfo(object, info)){resetSubmit(); return false;}      Wade.validate.disableAllElements(object, false);      if (!initialAll(object)){resetSubmit(); return false;}   page.submitLoading();   setConfirmSubmit(true);   return true;  },  confirmInfo:function (object, info) {   if (!setConfirmInfo(object, info)){resetSubmit(); return false;}      Wade.validate.disableAllElements(object, false);      if (!initialAll(object)){resetSubmit(); return false;}   page.submitLoading();   setConfirmSubmit();      return true;  },  queryForm:function(object, info) {   var rscoll = getVerifyElements(object);      if (!rscoll["result"]){resetSubmit(); return false;}   if (!setConfirmInfo(object, info)){resetSubmit(); return false;}      var elements = rscoll["elements"];   Wade.validate.setDisabledElements(elements, false);      if (!initialAll(object)){resetSubmit(); return false;}   page.submitLoading();   setConfirmSubmit(true);   return true;  },  confirmForm:function(object, info) {   var rscoll = getVerifyElements(object);      if (!rscoll["result"]){resetSubmit(); return false;}   if (!setConfirmInfo(object, info)){resetSubmit(); return false;}      var elements = rscoll["elements"];   Wade.validate.setDisabledElements(elements, false);      if (!initialAll(object)){resetSubmit(); return false;}   page.submitLoading();   setConfirmSubmit();      return true;  },  queryBox:function(object, boxName, info) {   if (!Wade.validate.verifyBox(object, boxName)){resetSubmit(); return false;}   if (!setConfirmInfo(object, info)){resetSubmit(); return false;}      if (!initialAll(object)){resetSubmit(); return false;}   page.submitLoading();   setConfirmSubmit(true);   return true;  },   confirmBox:function (object, boxName, info) {   if (!Wade.validate.verifyBox(object, boxName)){resetSubmit(); return false;}   if (!setConfirmInfo(object, info)){resetSubmit(); return false;}      if (!initialAll(object)){resetSubmit(); return false;}   page.submitLoading();   setConfirmSubmit();      return true;  },  alertMessage:function(msg,field){   alertMessage(msg,field);  }       };})();Wade.pub(Wade.validate);})();
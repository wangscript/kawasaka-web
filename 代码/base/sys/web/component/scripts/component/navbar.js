(function(){if(typeof(Wade.component.navBar)=='undefined'){Wade.component.navBar=(function(){ var verifylib = Wade.verifylib; var dom = Wade.dom; var ajax = Wade.ajax; var disabledElements = new Array;  function getPaginTurn(obj) {  var paginwrap = obj.parentNode.parentNode.parentNode.parentNode;  return dom.getChildElement(paginwrap, "DIV", "pageTurn"); };  function getPaginParam(pageTurn, obj) {  var currPageName = pageTurn.getAttribute("currPageName");  var checkboxName = pageTurn.getAttribute("checkboxName");  var needCount = obj.getAttribute("needCount");  var param = "&" + currPageName + "=" + obj.getAttribute("currPageValue");  param += "&" + currPageName + "_count=" + pageTurn.getAttribute("rowCount");  if (needCount != null) {   param += "&" + currPageName + "_needCount=" + needCount;  }  if (checkboxName != null && checkboxName != "") {   var checkboxNames = checkboxName.split(",");   for (var i=0; i<checkboxNames.length; i++) {    var boxname = currPageName + "_" + checkboxNames[i];    var boxobj = dom.getElement(boxname);    if (boxobj == null) {     boxobj = document.createElement("INPUT");     boxobj.name = boxname;     boxobj.type = "hidden";     boxobj.value = dom.getCheckedBoxStr(checkboxNames[i], "!");     obj.parentNode.appendChild(boxobj);    }   }  }  return param; };  function checkPaginSize(obj) {  var pageTurn = getPaginTurn(obj);  var maxPageSize = parseInt(pageTurn.getAttribute("maxPageSize"));  var changeInput = dom.getChildElement(obj.parentNode.parentNode, "INPUT", "changePageSize");  if (!verifylib.checkText(changeInput, "\u6BCF\u9875\u8BB0\u5F55\u6570")) return false;  if (!verifylib.checkNature(changeInput, "\u6BCF\u9875\u8BB0\u5F55\u6570")) return false;  if (parseInt(changeInput.value) > maxPageSize) {   alert("\u6BCF\u9875\u8BB0\u5F55\u6570\u4E0D\u80FD\u5927\u4E8E" + maxPageSize + "\u6761\uFF01");   changeInput.focus();   return false;  }    var pageSizeObjs = dom.getElements(changeInput.name);  for (var i=0; i<pageSizeObjs.length; i++) {   pageSizeObjs[i].value = changeInput.value;  }    return true; };  function checkPaginChange(obj) {  var pageTurn = getPaginTurn(obj);  var maxSize = parseInt(pageTurn.getAttribute("maxSize"));  var changeInput = dom.getChildElement(obj.parentNode.parentNode, "INPUT", "changePage");  if (!verifylib.checkText(changeInput, "\u8DF3\u8F6C\u9875\u6570")) return false;  if (!verifylib.checkNature(changeInput, "\u8DF3\u8F6C\u9875\u6570")) return false;  if (parseInt(changeInput.value) > maxSize) {   alert("\u8DF3\u8F6C\u9875\u6570\u4E0D\u80FD\u5927\u4E8E\u603B\u9875\u6570" + maxSize + "\u9875\uFF01");   changeInput.focus();   return false;  }  obj.currPageValue = changeInput.value;  return true; };  function openDisabledElements() {  for (var i=0; i<document.forms.length; i++) {   var elements = document.forms[i].elements;   for (var i=0; i<elements.length; i++) {     if (elements[i].disabled) {     elements[i].disabled = false;     disabledElements.push(elements[i]);    }   }  } }; return {    switchPaginView : function(obj, viewmode) {   var paginwrap = obj.parentNode.parentNode.parentNode.parentNode;   var pageturn = dom.getChildElement(paginwrap, "DIV", "pageTurn");   var pageset = dom.getChildElement(paginwrap, "DIV", "pageSet");   if (viewmode == "TURN") {    pageturn.style.display = "block";    pageset.style.display = "none";   } else if (viewmode == "SET") {    pageturn.style.display = "none";    pageset.style.display = "block";   }  },    triggerPaginTurn : function(obj) {   if (obj.className.endsWith("Dis")) return false;   var pageTurn = getPaginTurn(obj);   var beforeScript = pageTurn.getAttribute("beforeAction");   var listenerName = pageTurn.getAttribute("listenerName");   var refreshParts = pageTurn.getAttribute("refreshParts");   var paginName = pageTurn.getAttribute("paginName");   var checkboxName = pageTurn.getAttribute("checkboxName");   var afterScript = pageTurn.getAttribute("afterAction");   if (beforeScript != null && beforeScript != "") {    if (eval(beforeScript) == false) return false;   }   openDisabledElements();   var param = getPaginParam(pageTurn, obj);   ajax.ajaxSubmit(this, listenerName, param, refreshParts);   this.afterAction = "Wade.validate.setDisabledElements(Wade.component.navBar.getDisabledElements(), true);Wade.component.navBar.transferPaginCheckbox('" + paginName + "', '" + checkboxName + "');" + afterScript;  },    queryAllRecord : function(obj) {   if (obj.className.endsWith("Dis")) return false;   var pageTurn = getPaginTurn(obj);   var paginName = pageTurn.getAttribute("paginName");   var maxPageSize = parseInt(pageTurn.getAttribute("maxPageSize"));   var pageSizeObjs = getElements(paginName + "_pagesize");   for (var i=0; i<pageSizeObjs.length; i++) {    pageSizeObjs[i].value = maxPageSize;   }   return this.triggerPaginTurn(obj);  },    changePaginTurn : function(obj) {   if (obj.className.endsWith("Dis")) return false;   if (!checkPaginSize(obj)) return false;   if (!checkPaginChange(obj)) return false;   return this.triggerPaginTurn(obj);  },    transferPaginCheckbox : function(paginName, checkboxName) {   if (checkboxName == null || checkboxName == "" || checkboxName == "null") return;   var checkboxNames = checkboxName.split(",");   for (var i=0; i<checkboxNames.length; i++) {     var boxList = dom.getElements(checkboxNames[i]);       var transfer = new Array;    for (var j=0; j<boxList.length; j++) {     var boxValue = boxList[j].value;     if (boxList[j].getAttribute("flag") == "temp" && boxList[j].checked) {      transfer[boxValue] = boxValue;     }    }       var current = new Array;    for (var j=0; j<boxList.length; j++) {     var boxValue = boxList[j].value;     if (transfer[boxValue] != null) {      if (boxList[j].getAttribute("flag") != "temp") {       boxList[j].checked = true;       current[boxValue] = boxValue;      }     }    }       for (var j=0; j<boxList.length; j++) {     var boxValue = boxList[j].value;     if (boxList[j].getAttribute("flag") == "temp" && current[boxValue] != null) {      boxList[j].checked = false;     }    }       var boxobj = dom.getElement(paginName + "_" + checkboxNames[i]);    if (boxobj != null) boxobj.value = "";   }  },    triggerEnterDown : function(obj) {   if (window.event.keyCode == 13) {    if (!this.changePaginTurn(obj)) return false;   }   return true;  },    getDisabledElements : function(){   return disabledElements;  } };})();}})();
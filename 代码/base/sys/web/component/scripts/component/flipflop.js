(function(){if(typeof(Wade.component.flipFlop)=='undefined'){Wade.component.flipFlop=(function(){ var dh=System.DomHelper; var dom = Wade.dom; function containKey(array, key) {  for (var i=0; i<array.length; i++) {   if (array[i].value == key) {    return true;   }  }  return false; }; return {    move : function(source_name, target_name, isall) {   var options = new Array();   var source = dom.getElement(source_name);   var target = dom.getElement(target_name);   for (var i=source.length-1; i>=0; i--) {    var option = source.options[i];    if (option.selected || isall != null && isall) {     options[options.length] = option;     source.remove(i);    }   }   for (var i=options.length-1; i>=0; i--) {    var option = options[i];    if (!containKey(target.options, option.value)) target.options.add(new Option(option.text, option.value));   }  },    sort : function(name, mode) {   if (name == null) {    alert("\u8BF7\u9009\u4E2D\u8981\u64CD\u4F5C\u7684\u9009\u9879\uFF01");    return;   }   var select = dom.getElement(name);   var selectdIdx = select.selectedIndex;   if (selectdIdx == -1) return;   var opts=System.query("option",select);   if(opts && opts.length==select.options.length){    var foo=opts[selectdIdx];    if (mode == "down" && selectdIdx < select.length) {     opts[selectdIdx] = opts[selectdIdx + 1];     opts[selectdIdx + 1]=foo;    }    if (mode == "up" && selectdIdx > 0) {     opts[selectdIdx] = opts[selectdIdx - 1];     opts[selectdIdx - 1]=foo;    }    var oFragment=document.createDocumentFragment();    for(var i=0;i<opts.length;i++){      oFragment.appendChild(opts[i]);    }select.appendChild(oFragment); oFragment=null;   }opts=null;  },    setSortName : function(avai_name, sele_name, sort_name) {   var topobj = dom.getElement(avai_name + "_" + sele_name + "_top");   var buttomobj = dom.getElement(avai_name + "_" + sele_name + "_bottom");   topobj.setAttribute("sortName", sort_name);   buttomobj.setAttribute("sortName", sort_name);  } }})();}})();
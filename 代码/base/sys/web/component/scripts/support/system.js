(function(){ if(typeof(window['System'])=='undefined'){window['System']={libPath:''};}else{return;}System.CG=function(){     if(typeof(CollectGarbage)=="function"){CollectGarbage();}};System.apply = function(o, c, defaults){    if(defaults){        System.apply(o, defaults);    }    if(o && c && typeof c == 'object'){        for(var p in c){            o[p] = c[p];        }    }    return o;};System.apply(System,{    currentVersion:"20080804",    debug:false,    codebase:{},    NOT_XHR:"the web browser is not suport xmlhttp!",       emptyFn:function(){},    applyIf : function(o, c){        if(o && c){            for(var p in c){                if(typeof o[p] == "undefined"){ o[p] = c[p]; }            }        }        return o;    },    hasOwnProperty:function(obj,pro){        if(Object.prototype.hasOwnProperty){            return obj.hasOwnProperty(pro);        }        return typeof(obj[pro])!='undefined' && obj.constructor.prototype[pro]!==obj[pro];        },    override:function(origclass, overrides){        if(overrides){            var p = origclass.prototype;            for(var method in overrides){                p[method] = overrides[method];            }        }    },    extend:(function(){        var io = function(o){            for(var m in o){                this[m] = o[m];            }        };        return function(sb, sp, overrides){            if(typeof sp == 'object'){                overrides = sp;                sp = sb;                sb = function(){sp.apply(this, arguments);};            }            var F = function(){}, sbp, spp = sp.prototype;            F.prototype = spp;            sbp = sb.prototype = new F();            sbp.constructor=sb;            sb.superclass=spp;            if(spp.constructor == Object.prototype.constructor){                spp.constructor=sp;            }            sb.override = function(o){                System.override(sb, o);            };            sbp.override = io;            System.override(sb, overrides);            return sb;        };    })(),    each : function(array, fn, scope){        if(typeof array.length == "undefined" || typeof array == "string"){            array = [array];        }        for(var i = 0, len = array.length; i < len; i++){            if(fn.call(scope || array[i], array[i], i, array) === false){ return i; };        }    },        combine:function(){        var as=arguments,l=as.length,r=[];        for(var i=0;i<l;i=i+1){            var a=as[i];            if(a instanceof Array){r=r.concat(a);}            else{              if(a.length!==undefined&&!a.substr){              r=r.concat(Array.prototype.slice.call(a,0));              }else{               r.push(a);              }            }        }        return r;    },    callback : function(cb, scope, args, delay){        if(typeof cb == "function"){            if(delay){                cb.defer(delay, scope, args || []);            }else{                cb.apply(scope, args || []);            }        }    },    destroy : function(){        for(var i = 0, a = arguments, len = a.length; i < len; i++) {            var as = a[i];            if(as){                if(as.dom){                    as.removeAllListeners();                    as.remove();                    continue;                }                if(typeof as.destroy == 'function'){                    as.destroy();                }            }        }    }});Function.prototype.createCallback=function(){    var callArgs=arguments;var method=this;    return function(){     return method.apply(window,callArgs);    };};Function.prototype.createDelegate=function(obj,args,appendArgs){     var method = this;    return function() {       var callArgs = args || arguments;         if(appendArgs === true){           callArgs = Array.prototype.slice.call(arguments, 0);           callArgs = callArgs.concat(args);         }else if(typeof appendArgs == "number"){            callArgs = Array.prototype.slice.call(arguments, 0);             var applyArgs = [appendArgs, 0].concat(args);             Array.prototype.splice.apply(callArgs, applyArgs);         }        return method.apply(obj || window, callArgs);    };};Function.prototype.defer=function(millis, obj, args, appendArgs){    var fn = this.createDelegate(obj, args, appendArgs);    if(millis){        return setTimeout(fn, millis);    }    fn();    return 0;};Function.prototype.createSequence=function(fcn, scope){    if(typeof fcn != "function"){        return this;    }    var method = this;    return function() {        var retval = method.apply(this || window, arguments);        fcn.apply(scope || this || window, arguments);        return retval;    };};Function.prototype.createInterceptor=function(fcn, scope){    if(typeof fcn != "function"){        return this;    }    var method = this;    return function() {        fcn.target = this;        fcn.method = method;        if(fcn.apply(scope || this || window, arguments) === false){            return;        }        return method.apply(this || window, arguments);    };};    var escapeRe=function (s){    return s.replace(/([.*+?^${}()|[\]\/\\])/g,"\\$1");};   System.MixedCollection = function(allowFunctions, keyFn){    this.items = [];    this.map = {};    this.keys = [];    this.length = 0;        this.allowFunctions = allowFunctions === true;    if(keyFn){        this.getKey = keyFn;    }    };System.MixedCollection.prototype={    allowFunctions : false,     add : function(key, o){        if(arguments.length == 1){            o = arguments[0];            key = this.getKey(o);        }        if(typeof key == "undefined" || key === null){            this.length=(this.length+1);            this.items.push(o);            this.keys.push(null);        }else{            var old = this.map[key];            if(old){                return this.replace(key, o);            }            this.length=(this.length+1);            this.items.push(o);            this.map[key] = o;            this.keys.push(key);        }                return o;    },    getKey : function(o){         return o.id;     },    replace : function(key, o){        if(arguments.length == 1){            o = arguments[0];            key = this.getKey(o);        }        var old = this.item(key);        if(typeof key == "undefined" || key === null || typeof old == "undefined"){             return this.add(key, o);        }        var index = this.indexOfKey(key);        this.items[index] = o;        this.map[key] = o;                return o;    },    addAll : function(objs){        if(arguments.length > 1 || objs instanceof Array){            var args = arguments.length > 1 ? arguments : objs;            for(var i = 0, len = args.length; i < len; i=i+1){                this.add(args[i]);            }        }else{            for(var key in objs){                if(this.allowFunctions || typeof objs[key] != "function"){                    this.add(objs[key], key);                }            }        }    },    each : function(fn, scope){        var items = [].concat(this.items);         for(var i = 0, len = items.length; i < len; i=i+1){            if(fn.call(scope || items[i], items[i], i, len) === false){                break;            }        }    },    inverseEach :function(fn,scope){        var items = [].concat(this.items);         for(var i = (items.length-1), len = -1; i > len; i=i-1){            if(fn.call(scope || items[i], items[i], i, len) === false){                break;            }        }        },    eachKey : function(fn, scope){        for(var i = 0, len = this.keys.length; i < len; i=i+1){            fn.call(scope || window, this.keys[i], this.items[i], i, len);        }    },    find : function(fn, scope){        for(var i = 0, len = this.items.length; i < len; i=i+1){            if(fn.call(scope || window, this.items[i], this.keys[i])){                return this.items[i];            }        }        return null;    },    insert : function(index, key, o){        if(arguments.length == 2){            o = arguments[1];            key = this.getKey(o);        }        if(index >= this.length){            return this.add(key, o);        }        this.length=(this.length+1);        this.items.splice(index, 0, o);        if(typeof(key)!='undefined' && key !== null){            this.map[key] = o;        }        this.keys.splice(index, 0, key);                return o;    },       remove : function(o){        return this.removeAt(this.indexOf(o));    },       removeAt : function(index){        if(index < this.length && index >= 0){            this.length=(this.length-1);            var o = this.items[index];            this.items.splice(index, 1);            var key = this.keys[index];            if(typeof key != "undefined"){                delete this.map[key];            }            this.keys.splice(index, 1);                    }    },    removeKey : function(key){        return this.removeAt(this.indexOfKey(key));    },    getCount : function(){        return this.length;     },    indexOf : function(o){        if(!this.items.indexOf){            for(var i = 0, len = this.items.length; i < len; i=i+1){                if(this.items[i] == o){ return i;}            }            return -1;        }else{            return this.items.indexOf(o);        }    },    indexOfKey : function(key){        if(!this.keys.indexOf){            for(var i = 0, len = this.keys.length; i < len; i=i+1){                if(this.keys[i] == key){ return i;}            }            return -1;        }else{            return this.keys.indexOf(key);        }    },    item : function(key){        var item = typeof this.map[key] != "undefined" ? this.map[key] : this.items[key];        return typeof item != 'function' || this.allowFunctions ? item : null;     },    itemAt : function(index){        return this.items[index];    },    key : function(key){        return this.map[key];    },    contains : function(o){        return this.indexOf(o) != -1;    },    containsKey : function(key){        return typeof this.map[key] != "undefined";    },    clear : function(){        this.length = 0;        this.items = [];        this.keys = [];        this.map = {};           },    first : function(){        return this.items[0];     },    last : function(){        return this.items[this.length-1];       },       _sort : function(property, dir, fn){        var dsc = String(dir).toUpperCase() == "DESC" ? -1 : 1;        fn = fn || function(a, b){            return a-b;        };        var c = [], k = this.keys, items = this.items,i;        for(i = 0, len = items.length; i < len; i=i+1){            c[c.length] = {key: k[i], value: items[i], index: i};        }        c.sort(function(a, b){            var v = fn(a[property], b[property]) * dsc;            if(v === 0){                v = (a.index < b.index ? -1 : 1);            }            return v;        });        for(i = 0, len = c.length; i < len; i=i+1){            items[i] = c[i].value;            k[i] = c[i].key;        }            },       sort : function(dir, fn){        this._sort("value", dir, fn);    },       keySort : function(dir, fn){        this._sort("key", dir, fn || function(a, b){            return String(a).toUpperCase()-String(b).toUpperCase();        });    },      getRange : function(start, end){        var items = this.items;        if(items.length < 1){            return [];        }        start = start || 0;        end = Math.min(typeof end == "undefined" ? this.length-1 : end, this.length-1);        var r = [],i;        if(start <= end){            for(i = start; i <= end; i=i+1) {             r[r.length] = items[i];            }        }else{            for(i = start; i >= end; i=i-1) {             r[r.length] = items[i];            }        }        return r;    },       filter : function(property, value){        if(!value.exec){             value = String(value);            if(value.length === 0){                return this.clone();            }            value = new RegExp("^" + escapeRe(value), "i");        }        return this.filterBy(function(o){            return o && value.test(o[property]);        }); },      filterBy : function(fn, scope){        var r = new System.MixedCollection();        r.getKey = this.getKey;        var k = this.keys, it = this.items;        for(var i = 0, len = it.length; i < len; i=i+1){            if(fn.call(scope||this, it[i], k[i])){    r.add(k[i], it[i]);   }        }        return r;    },       clone : function(){        var r = new System.MixedCollection();        var k = this.keys, it = this.items;        for(var i = 0, len = it.length; i < len; i=i+1){            r.add(k[i], it[i]);        }        r.getKey = this.getKey;        return r;    }};System.MixedCollection.prototype.get = System.MixedCollection.prototype.item;System.DelayedTask = function(fn, scope, args){ var id = null, d, t; var call = function(){ var now = new Date().getTime();        if(now - t >= d){            clearInterval(id);            id = null;            fn.apply(scope, args || []);        }    };       this.delay = function(delay, newFn, newScope, newArgs){        if(id && delay != d){            this.cancel();        }        d = delay;        t = new Date().getTime();        fn = newFn || fn;        scope = newScope || scope;        args = newArgs || args;        if(!id){            id = setInterval(call, d);        }    };        this.cancel = function(){        if(id){            clearInterval(id);            id = null;        }    };};System.TaskRunner = function(interval){    interval = interval || 10;    var tasks = [], removeQueue = [];    var id = 0;    var running = false;    var stopThread = function(){        running = false;        clearInterval(id);        id = 0;    };    var startThread = function(){        if(!running){            running = true;            id = setInterval(runTasks, interval);        }    };    var removeTask = function(task){        removeQueue.push(task);        if(task.onStop){            task.onStop();        }    };    var runTasks = function(){        if(removeQueue.length > 0){            for(var i = 0, len = removeQueue.length; i < len; i++){                tasks.remove(removeQueue[i]);            }            removeQueue = [];            if(tasks.length < 1){                stopThread();                return;           }        }        var now = new Date().getTime();        for(var i = 0, len = tasks.length; i < len; ++i){            var t = tasks[i];            var itime = now - t.taskRunTime;            if(t.interval <= itime){                var rt = t.run.apply(t.scope || t, t.args || [++t.taskRunCount]);                t.taskRunTime = now;                if(rt === false || t.taskRunCount === t.repeat){                    removeTask(t);                    return;                }            }            if(t.duration && t.duration <= (now - t.taskStartTime)){                removeTask(t);            }        }    };        this.start = function(task){        tasks.push(task);        task.taskStartTime = new Date().getTime();        task.taskRunTime = 0;        task.taskRunCount = 0;        startThread();        return task;    };    this.stop = function(task){        removeTask(task);        return task;    };    this.stopAll = function(){        stopThread();        for(var i = 0, len = tasks.length; i < len; i++){            if(tasks[i].onStop){                tasks[i].onStop();            }        }        tasks = [];        removeQueue = [];    };};System.TaskMgr = new System.TaskRunner();System.CompatibleController=(function(){ var o={        ie:0,        opera:0,        gecko:0,        webkit:0,  safari:0,  mac:0,        mobile: null     };    var ua=navigator.userAgent, m;    if ((/KHTML/).test(ua)) {        o.webkit=1;    }    m=ua.match(/AppleWebKit\/([^\s]*)/);    if (m&&m[1]) {        o.webkit=parseFloat(m[1]);        if (/ Mobile[\/]?/.test(ua)) {            o.mobile = "Apple";         } else {            m=ua.match(/NokiaN[^\/]*/);            if (m) {                o.mobile = m[0];             }        }    }    if (!o.webkit) {         m=ua.match(/Opera[\s\/]([^\s]*)/);        if (m&&m[1]) {            o.opera=parseFloat(m[1]);            m=ua.match(/Opera Mini[^;]*/);            if (m) {                o.mobile = m[0];             }        } else {             m=ua.match(/MSIE\s([^;]*)/);            if (m&&m[1]) {                o.ie=parseFloat(m[1]);            } else {                m=ua.match(/Gecko\/([^\s]*)/);                if (m) {                    o.gecko=1;                     m=ua.match(/rv:([^\s\)]*)/);                    if (m&&m[1]) {                        o.gecko=parseFloat(m[1]);                    }                }            }        }    }    o.safari = ua.indexOf("safari")!=-1;    o.mac=(ua.indexOf("macintosh")!=-1|| ua.indexOf("mac os x")!=-1);        System.UserAgent=window["UserAgent"]=o;        var compatMode=document.compatMode=="CSS1Compat";    var securityLink=window.location.href.toLowerCase().indexOf("https")===0;    System.apply(System.UserAgent,o);        System.apply(System,{        isStrict:compatMode,        isSecure:securityLink,        SSL_SECURE_URL:"javascript:false",        LANK_IMAGE_URL:"http:/"+"/img/s.gif",        isBorderBox:(o.ie && !compatMode)    });        System.userData=o.ie && !System.debug;    System.useShims=(( o.ie==7 && !o.gecko)|| (System.isBorderBox && o.mac));        if(!window['XMLHttpRequest'] && window['ActiveXObject'])    {      window['XMLHttpRequest']=function(){        for(var i=0,a=['MSXML3','MSXML2','Microsoft'];i<a.length;i=i+1)            try{return new ActiveXObject(a[i]+'.XMLHTTP')}catch(ex){}        System.xhr=null;throw new Error(System.NOT_XHR);}    }     return {        isIE:o.ie,        isGecko:o.gecko,        isOpera:o.opera ,        isSafari:o.safari,        supportsXmlHttp:function(){          return "object"==typeof(System.xhr||(System.xhr=new XMLHttpRequest()));        }                  };    })();System.AjaxRequest=function(url,options,fn,failureFn){    this.transport =new XMLHttpRequest();    this.setOptions(options,fn,failureFn);    this.request(url);};System.AjaxRequest.prototype={    setOptions: function(options,fn,failureFn) {        this.method='post';if(options && options['method'] && options['method']=='get')this.method='get';        this.sucFn=(fn && typeof(fn)=='function')?fn:System.emptyFn;        this.failureFn=(failureFn && typeof(failureFn)=='function')?failureFn:System.emptyFn;        this.postBody=(options && options['postbody'] && typeof(options['postbody'])=="string")?options['postbody']:null;        this.encoding=(options && options['encoding'] && typeof(options['encoding'])=="string")?options['encoding']:'UTF-8';    },    responseIsSuccess: function() {        var isSuc=false;        try{            isSuc=this.transport.status == undefined                || this.transport.status == 0                ||(this.transport.status >= 200 && this.transport.status < 300);        }catch(e){}        return isSuc;    },    responseIsFailure: function() {        return !this.responseIsSuccess();    },    request: function(url) {           try {          this.url = url;          this.transport.open(this.method,this.url,true);          this.transport.onreadystatechange =(function (_method,scope){return function(){_method.apply(scope,[]);}})(this.onStateChange,this);          this.setRequestHeaders();                    var body = this.postBody ? this.postBody:'';          this.transport.send(this.method == 'post' ? body : null);        } catch (e) {          throw e;        }    },    setRequestHeaders: function() {        var requestHeaders = {};        if (this.method == 'post') {          requestHeaders["Content-type"]="application/x-www-form-urlencoded" +             (this.encoding ? '; charset=' + this.encoding : '');          if (this.transport.overrideMimeType && System.UserAgent.gecko < 2005){              requestHeaders["Connection"]="close"; }  }                  for(var p in requestHeaders){            if(typeof(requestHeaders[p])=='string'){             this.transport.setRequestHeader(p, requestHeaders[p]);            }        }        requestHeaders=null;    },    onStateChange: function() {        var readyState = this.transport.readyState;        if(readyState == 4){         if (this.responseIsSuccess()) {             (this.sucFn || System.emptyFn)(this.transport);                   }else{          (this.failureFn || System.emptyFn)(this.transport);          }          this.transport.onreadystatechange = System.emptyFn;        }        } };System.AjaxManager=(function(){    var postEncoding='UTF-8';    return {        get:function(url,fn){            var x;            try{                if(System.CompatibleController.supportsXmlHttp()){                    x=System.xhr;                    x.open("GET",url,true);                      x.onreadystatechange=function(){                       System.AjaxManager.stateChange.apply(this,[x,fn]);                    };x.send(null);                }else alert(System.NOT_XHR);            }            catch(ex){alert(ex.message);}        },        post:function(url,fn,postBody,encoding){            var x;            var body = postBody ? postBody : null;            if(encoding)postEncoding=encoding;            try{                if(System.CompatibleController.supportsXmlHttp()){                    x=System.xhr;                    x.open("POST",url,true);                     x.setRequestHeader("content-type","application/x-www-form-urlencoded" + (postEncoding ?'; charset=' + postEncoding : ''));                     x.onreadystatechange=function(){                       System.AjaxManager.stateChange.apply(this,[x,fn]);                    };                    x.send(body);                }else alert(System.NOT_XHR);            }            catch(ex){alert(ex.message);}               },        stateChange:function(r,fn){            var isSuc=false;            try{                isSuc=r.status == undefined || r.status == 0||(r.status >= 200 && r.status < 300);            }catch(e){}                   if (isSuc && r.readyState==4){              try{(fn || System.emptyFn)(r);}catch(ex){alert(ex.message);}           }        }    };})(); System.loadEvents=[]; System.onLoad=function(fn, scope){    if(System.isReady){     if(typeof(fn)=="function"){  fn.call(typeof(scope)=="object"?scope:window); }}else if(typeof(System.loadEvents)=="object"  && System.loadEvents instanceof Array){   System.loadEvents.push([fn,scope]);    }};  System.runLoadEvents=function(){ if(typeof(System.loadEvents)=="object" && System.loadEvents instanceof Array      && System.loadEvents.length){ for(var i=0;i<System.loadEvents.length;i++){   if(typeof(System.loadEvents[i])!="undefined" && (System.loadEvents[i] instanceof Array)     && typeof(System.loadEvents[i][0])=="function"){   System.loadEvents[i][0].call((typeof(System.loadEvents[i][1])=="object")?System.loadEvents[i][1]:window);  } }} System.loadEvents=[];System.loadEvents=null;};    var t=document.getElementsByTagName("SCRIPT");t=(System.scriptElement=t[t.length-1]).src.replace(/\\/g,"/");System.supportPath=(t.lastIndexOf("/")<0?".":t.substring(0,t.lastIndexOf("/")));    if(System.UserAgent.ie && System.userData){    try{System.scriptElement.addBehavior("#default#userdata")}catch(ex){System.userData=false}    System.saveUserData=function(key,value,expires)    {      try{var d=new Date();      if(typeof(expires)=="number")d.setTime(d.getTime()+expires);      else d.setDate(d.getDate()+30);      var t=this.scriptElement;t.load(key.replace(/\W/g,"_"));      t.setAttribute("code",value);      t.setAttribute("version",this.currentVersion);      t.expires=d.toUTCString();t.save(key.replace(/\W/g,"_"));      return t.getAttribute("code");}catch(ex){this.userdata=false}    };     System.loadUserData=function(key)    {      try{var t=this.scriptElement;t.load(key.replace(/\W/g,"_"));      if(this.currentVersion!=t.getAttribute("version")){      if(t.getAttribute("code"))this.deleteUserData(key);return "";}      return t.getAttribute("code");}catch(ex){this.userdata=false;return ""}    };    System.deleteUserData=function(key)    {      try{var t=this.scriptElement;t.load(key.replace(/\W/g,"_"));      t.expires=new Date(315532799000).toUTCString();      t.save(key.replace(/\W/g, "_"));}catch(ex){this.userdata=false}    };} t=null;System.releaseNo="";System.relativelyDir="";var v,ct=document.getElementById("pagecontext"); if(ct && ct.nodeType){ v=ct.getAttribute("releaseNo");if(typeof(v)=="string" && v!="") System.releaseNo="_" + v + ".js"; v=ct.getAttribute("relativelyDir");if(typeof(v)=="string" && v!=""){ System.relativelyDir=v;}}ct=null;  System.getPath=function(notLibJs){  var _path="";  if(!notLibJs && typeof(System.libPath)=="string" && System.libPath!="")   _path += System.libPath;  if(typeof(relativelyDir)=="string" && System.relativelyDir!="")   _path= System.relativelyDir+_path;  if(typeof(_path)=="string" && (_path!="" || notLibJs))   return _path;  return System.supportPath;};System.mapPath=function(ns,op){    if(typeof(ns)=="string" && ns!=""){     var p=System.getPath(op);if(typeof(p)=="string" && p!=""){p+="/";}return  p + ns;    }};System.parseResponse=function(ns,s,expires){  if(s==null||s.charAt(0)=="\uFFFD"){    alert("Maybe file encoding isn't ANSI or UTF-8");return ""}  if(s.charAt(0)=="\xef")s=s.substr(3);   s=s.replace(/(^|\n)\s*\/\/+\s*((Using|Import|Include)\((\"|\'))/g,"$1$2");  if(System.userdata)System.saveUserData(ns,s,expires);return s;  return s;};    System.load=function(f_path,N){  var s;  if(System.userData && /\.js$/i.test(f_path) && (s = System.loadUserData(N)))    return (System.codebase[N]="//from userdata\r\n"+ s);    try  {    if(System.CompatibleController.supportsXmlHttp()){    var x=System.xhr;    if(typeof(x.overrideMimeType)=='function')x.overrideMimeType('text/javascript');     x.open("GET",f_path,false); x.send(null);    if (x.readyState==4){    if(x.status==0||x.status==200||/^file\:/i.test(f_path))      return System.parseResponse('',x.responseText);    else if(x.status==404)alert("path:" + f_path +  "\nFile not found");    else throw new Error(x.status +": "+ x.statusText );}}    else alert(System.NOT_XHR);  }  catch(ex){}return;};window["Include"]=function(_path,notLibJs){ if(System.releaseNo!="") _path+=System.releaseNo;    var f_path,N,c,S=System;x=System.CompatibleController.supportsXmlHttp();    if(typeof(_path)!="string" || _path=="") throw new Error("error jspath");    f_path=System.mapPath(_path,notLibJs),N=_path.toLowerCase();    var B=(S.codebase && S.codebase[N] && typeof(S.codebase[N])=="string");    if(!B)if(x && (c=System.load(f_path,N)))S.codebase[N]=c;    B=(S.codebase && S.codebase[N] && typeof(S.codebase[N])=="string");    try{if(window.execScript && B){window.execScript(S.codebase[N],"javascript");}else    {        var s=document.createElement("SCRIPT");s.type="text/javascript";        if(B){s.innerHTML="eval(System.codebase['"+N+"']);";}        else{s.src= f_path; System.xhr="xhr";}        document.getElementsByTagName("HEAD")[0].appendChild(s);s=null}    }catch(B){alert("Syntax error on include "+N+"\n"+ B.message);}B=null;       };window["LoadCssFile"]=function(_path){ System.DomHelper.CSS.loadCssFile(System.relativelyDir + _path);};System.libPath='component/scripts';   })(); 
(function(){if(typeof(window['System'])=='undefined'){ window['System']={};}var scriptFragment='<script[^>]*>([\u0001-\uFFFF]*?)</script>';var JSONFilter= /^\/\*-secure-\s*(.*)\s*\*\/\s*$/;var bodyFragment='<body[^>]*>([\u0001-\uFFFF]*?)</body>';var scriptFilter=/<script[^>]*>([\u0001-\uFFFF]*?)<\/script>/ig;  System.Common={    urlEncode : function(o){        if(!o){            return "";        }        var buf = [];        for(var key in o){            var ov = o[key], k = encodeURIComponent(key);            var type = typeof ov;            if(type == 'undefined'){                buf.push(k, "=&");            }else if(type != "function" && type != "object"){                buf.push(k, "=", encodeURIComponent(ov), "&");            }else if(ov instanceof Array){                if (ov.length) {                    for(var i = 0, len = ov.length; i < len; i++) {                        buf.push(k, "=", encodeURIComponent(ov[i] === undefined ? '' : ov[i]), "&");                    }                } else {                    buf.push(k, "=&");                }            }        }        buf.pop();        return buf.join("");    },    urlDecode : function(string, overwrite){        if(!string || !string.length){            return {};        }        var obj = {};        var pairs = string.split('&');        var pair, name, value;        for(var i = 0, len = pairs.length; i < len; i++){            pair = pairs[i].split('=');            name = decodeURIComponent(pair[0]);            value = decodeURIComponent(pair[1]);            if(overwrite !== true){                if(typeof obj[name] == "undefined"){                    obj[name] = value;                }else if(typeof obj[name] == "string"){                    obj[name] = [obj[name]];                    obj[name].push(value);                }else{                    obj[name].push(value);                }            }else{                obj[name] = value;            }        }        return obj;    },    parseUrlParams:function(string){     if(!string || !string.length){            return "";        }                string=string.replace(/&amp;/g,"&");        string=string.replace(/\n/g,"\\n");        return string.replace(/&([^=&]+)=([^=&]+)/g,function(match){   return match.replace(/[^=&\u4E00-\u9FA5\u3000-\u303F\uFF00-\uFFEF\s]+/g,function(match){return encodeURIComponent(decodeURIComponent(match));});  });    },        parseJSON:function(string,filter){     if(!string || !string.length){            return {};        }        var j;        function walk(k, v) {            var i, n;            if (v && typeof v === 'object') {      for (i in v) {          if (Object.prototype.hasOwnProperty.apply(v, [i])) {              n = walk(i, v[i]);              if (n !== undefined) {                  v[i] = n;              } else {                  delete v[i];              }           }       }   }      return filter(k, v);  }  if (/^[\],:{}\s]*$/.test(string.replace(/\\./g, '@').      replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').      replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) {   j = eval('(' + string + ')');   return typeof filter === 'function' ? walk('', j) : j;  }  throw new SyntaxError('parseJSON'); }, extractScripts:function(str) {    if(typeof(str)=='string' && str!=''){    var matchAll = new RegExp(scriptFragment, 'img');    var matchOne = new RegExp(scriptFragment, 'im');    var m=(str.match(matchAll) || []);    var results=[];    if(m && m.length){     for(var i=0;i<m.length;i++){      results.push(((m[i]).match(matchOne) ||['',''])[1]);     }    }    return results;    }  },  filterScripts:function(str){   if(typeof(str)=='string' && str!=''){    return str.replace(scriptFilter,"");   }return "";  },  extractBodyHtml:function(str) {  var s="";    if(typeof(str)=="string" && str!=""){   var matchAll = new RegExp(bodyFragment, 'img');   var matchOne = new RegExp(bodyFragment, 'im');   var m=(str.match(matchAll) || []);   var results=[];   if(m && m.length){         results.push(this.filterScripts((m[0].match(matchOne) ||['',''])[1]));       }   matchAll=null;matchOne=null;m=null;   s=results.join("");results=null;    }return s; }, getDateFormatRegExp:function(format){  var exp,fexp;  if(typeof(format)!="string" || format=="")return null;  var fm=format.trim();  fm=fm.toUpperCase();  switch(fm) {   case "YYYY":    exp = /^([1-2]\d{3})$/;    fexp=/^([yY]{4})$/;    break;   case "YYYYMM":    exp = /^([1-2]\d{3})([0-1]?[0-9])$/;    fexp=/^([yY]{4})(MM)$/;    break;   case "YYYY-MM":    exp = /^([1-2]\d{3})(-|\/)([0-1]?[0-9])$/;    fexp=/^([yY]{4})(-|\/)(MM)$/;    break;   case "YYYY/MM":    exp = /^([1-2]\d{3})(\/|\/)([0-1]?[0-9])$/;    fexp=/^([yY]{4})(-|\/)(MM)$/;    break;   case "YYYYMMDD":    exp = /^([1-2]\d{3})([0-1]?[0-9])([0-3]?[0-9])$/;    fexp=/^([yY]{4})(MM)([dD]{2})$/;    break;   case "YY-MM-DD":    exp = /^(\d{2})(-|\/)([0-1]?[0-9])\2([0-3]?[0-9])$/;    fexp=/^([yY]{2})(-|\/)(MM)\2([dD]{2})$/;    break;    case "YYYY-MM-DD":    exp = /^([1-2]\d{3})(-|\/)([0-1]?[0-9])\2([0-3]?[0-9])$/;    fexp=/^([yY]{4})(-|\/)(MM)\2([dD]{2})$/;    break;   case "YYYY/MM/DD":    exp = /^([1-2]\d{3})(\/|\/)([0-1]?[0-9])\2([0-3]?[0-9])$/;    fexp=/^([yY]{4})(-|\/)(MM)\2([dD]{2})$/;    break;   case "HH":    exp = /^(\d{2})$/;    fexp=/^([hH]{2})$/;    break;   case "HHMM":    exp = /^(\d{2})(\d{2})$/;    fexp=/^([hH]{2})(mm)$/;    break;   case "HH:MM":    exp = /^(\d{2})(:)?(\d{2})$/;    fexp=/^([hH]{2})(:)?(mm)$/;    break;   case "HHMMSS":    exp = /^(\d{2})(\d{2})(\d{2})$/;    fexp=/^([hH]{2})(mm)([sS]{2})$/;    break;   case "HH:MM:SS":    exp = /^(\d{2})(:)?(\d{2})\2(\d{2})$/;    fexp=/^([hH]{2})(:)?(mm)\2([sS]{2})$/;    break;   case "YYYYMMDD HH":    exp = /^([1-2]\d{3})([0-1]?[0-9])([0-3]?[0-9]) (\d{2})$/;    fexp=/^([yY]{4})(MM)([dD]{2}) ([hH]{2})$/;    break;   case "YYYY-MM-DD HH":    exp = /^([1-2]\d{3})(-|\/)([0-1]?[0-9])\2([0-3]?[0-9]) (\d{2})$/;    fexp=/^([yY]{4})(-|\/)(MM)\2([dD]{2}) ([hH]{2})$/;    break;   case "YYYY/MM/DD HH":    exp = /^([1-2]\d{3})(\/|\/)([0-1]?[0-9])\2([0-3]?[0-9]) (\d{2})$/;    fexp=/^([yY]{4})(-|\/)(MM)\2([dD]{2}) ([hH]{2})$/;    break;   case "YYYYMMDD HHMM":    exp = /^([1-2]\d{3})([0-1]?[0-9])([0-3]?[0-9]) (\d{2})(\d{2})$/;    fexp=/^([yY]{4})(MM)([dD]{2}) ([hH]{2})(mm)$/;    break;   case "YYYY-MM-DD HH:MM":    exp = /^([1-2]\d{3})(-|\/)([0-1]?[0-9])\2([0-3]?[0-9]) (\d{2}):(\d{2})$/;    fexp=/^([yY]{4})(-|\/)(MM)\2([dD]{2}) ([hH]{2}):(mm)$/;    break;   case "yyyy/MM/dd HH:mm":    exp = /^([1-2]\d{3})(\/|\/)([0-1]?[0-9])\2([0-3]?[0-9]) (\d{2}):(\d{2})$/;    fexp=/^([yY]{4})(-|\/)(MM)\2([dD]{2}) ([hH]{2}):(mm)$/;    break;   case "YYYYMMdd HHMMSS":    exp = /^([1-2]\d{3})([0-1]?[0-9])([0-3]?[0-9]) (\d{2})(\d{2})(\d{2})$/;    fexp=/^([yY]{4})(MM)([dD]{2}) ([hH]{2})(mm)([sS]{2})$/;    break;   case "YYYYMMDDHHMMSS":    exp = /^([1-2]\d{3})([0-1]?[0-9])([0-3]?[0-9])(\d{2})(\d{2})(\d{2})$/;    fexp=/^([yY]{4})(MM)([dD]{2})([hH]{2})(mm)([sS]{2})$/;    break;   case "YYYY-MM-DD HH:MM:SS":    exp = /^([1-2]\d{3})(-|\/)([0-1]?[0-9])\2([0-3]?[0-9]) (\d{2}):(\d{2}):(\d{2})$/;    fexp=/^([yY]{4})(-|\/)(MM)\2([dD]{2}) ([hH]{2}):(mm):([sS]{2})$/;    break;   case "YYYY/MM/DD HH:MM:SS":    exp = /^([1-2]\d{3})(\/|\/)([0-1]?[0-9])\2([0-3]?[0-9]) (\d{2}):(\d{2}):(\d{2})$/;    fexp=/^([yY]{4})(-|\/)(MM)\2([dD]{2}) ([hH]{2}):(mm):([sS]{2})$/;    break;  }  if(exp && fexp){return [exp,fexp];}  return null;   }        };window["urlEncode"]=System.Common.urlEncode;window["urlDecode"]=System.Common.urlDecode;System.applyIf(String, {    escape : function(string) {        return string.replace(/('|\\)/g, "\\$1");    },    leftPad : function (val, size, ch) {        var result = new String(val);        if(ch === null || ch === undefined || ch === '') {            ch = " ";        }        while (result.length < size) {            result = ch + result;        }        return result;    },    format : function(format){        var args = Array.prototype.slice.call(arguments, 1);        return format.replace(/\{(\d+)\}/g, function(m, i){            return args[i];        });    }});System.applyIf(String.prototype, {    trim:function(){   return this.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+$)/g, ""); }, getAttribute:function(attribute)    {      if(new RegExp("(^|;)\\s*"+attribute+"\\s*:\\s*([^;]*)\\s*(;|$)","i").test(this))      return RegExp.$2.replace(/%3B/gi,";").replace(/%25/g,"%"); return null;    },    setAttribute:function(attribute, value)    {      value=(""+value).replace(/%/g,"%25").replace(/;/g,"%3B").replace(/\r|\n/g,"");      return (attribute +":"+ value +";" + this);    },    deleteAttribute:function(attribute)    {      return this.replace(new RegExp("\\b\\s*"+attribute+"\\s*:\\s*([^;]*)\\s*(;|$)","gi"),"");    },    toDate:function(format){     var regs=System.Common.getDateFormatRegExp(format);if(regs==null)return null;     var dateMatches = this.match(regs[0]);     var formatmatches = format.match(regs[1]);     var dm,fm,date = new Date();     if(formatmatches ==null || dateMatches==null)return null;     for(var i=1;i<dateMatches.length;i++){      fm=formatmatches[i];dm=dateMatches[i];      if(typeof(dm)=="string" && dm!=""){         switch(fm.substring(0,1)){             case 'Y':             case 'y':              date.setFullYear(parseInt(dm,10),10);break;             case 'M':              date.setMonth(parseInt(dm,10)-1,10);break;             case 'd':                 date.setDate(parseInt(dm,10),10);break;             case 'H':             case 'h':                 date.setHours(parseInt(dm,10),10);break;             case 'm':                 date.setMinutes(parseInt(dm,10),10);break;             case 's':                 date.setSeconds(parseInt(dm,10),10);break;          }delete dm;dm=null;      }      }     return date;         }    });System.applyIf(Array.prototype, { indexOf:function(item, i) {  i=i || (i = 0);  var length = this.length;  if (i < 0) i = length + i;  for (; i < length; i++)   if (this[i] === item) return i;  return -1; }, contains:function(item) {   return this.indexOf(item) != -1;  }, clear:function(){  this.length=0; }, remove:function(item){  this.splice(this.indexOf(item),1); }});Date.prototype.format=function(format){  var o = {    "M+" : this.getMonth()+1,     "d+" : this.getDate(),        "h+" : this.getHours(),       "H+" : this.getHours(),       "m+" : this.getMinutes(),     "s+" : this.getSeconds(),     "w+" : "\u5929\u4e00\u4e8c\u4e09\u56db\u4e94\u516d".charAt(this.getDay()),       "q+" : Math.floor((this.getMonth()+3)/3),      "S"  : this.getMilliseconds()   };  if(/(y+)/.test(format)) format=format.replace(RegExp.$1,    (this.getFullYear()+"").substr(4 - RegExp.$1.length));  for(var k in o)if(new RegExp("("+ k +")").test(format))    format = format.replace(RegExp.$1,      RegExp.$1.length==1 ? o[k] :         ("00"+ o[k]).substr((""+ o[k]).length));  return format;};Date.prototype.compare=function(str,format){    var regs=System.Common.getDateFormatRegExp(format);    if(!regs)return false;if(typeof(str)!="string" || str=="")return false;    var dateMatches = str.match(regs[0]);    var formatmatches = format.match(regs[1]);    var dm,fm,v=true;    for(var i=1;i<dateMatches.length;i++){     fm=formatmatches[i];dm=dateMatches[i];        switch(fm.substring(0,1)){            case 'Y':            case 'y':             if(this.getFullYear()!=parseInt(dm,10))v=false;break;            case 'M':             if(this.getMonth()!=parseInt(dm,10)-1)v=false;break;            case 'd':                if(this.getDate()!=parseInt(dm,10))v=false;break;            case 'H':            case 'h':                if(this.getHours()!=parseInt(dm,10))v=false;break;            case 'm':                if(this.getMinutes()!=parseInt(dm,10))v=false;break;            case 's':                if(this.getSeconds()!=parseInt(dm,10))v=false;break;         }     }    return v;   };Number.prototype.toFixed = function(d){    var s=this+"";if(!d)d=0;    if(s.indexOf(".")==-1)s+=".";s+=new Array(d+1).join("0");    if (new RegExp("^(-|\\+)?(\\d+(\\.\\d{0,"+ (d+1) +"})?)\\d*$").test(s))    {        var s="0"+ RegExp.$2, pm=RegExp.$1, a=RegExp.$3.length, b=true;        if (a==d+2){a=s.match(/\d/g); if (parseInt(a[a.length-1],10)>4)        {            for(var i=a.length-2; i>=0; i--) {a[i] = parseInt(a[i],10)+1;            if(a[i]==10){a[i]=0; b=i!=1;} else break;}        }        s=a.join("").replace(new RegExp("(\\d+)(\\d{"+d+"})\\d$"),"$1.$2");    }if(b)s=s.substr(1);return (pm+s).replace(/\.$/, "");} return this+"";};})();